{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source/images/beian.png","path":"images/beian.png","modified":0,"renderable":0},{"_id":"source/images/wxmin.jpg","path":"images/wxmin.jpg","modified":0,"renderable":0},{"_id":"themes/hexo-theme-matery/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","path":"css/gitment.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/matery.css","path":"css/matery.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my.css","path":"css/my.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/matery.js","path":"js/matery.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpeg","path":"medias/avatar.jpeg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/favicon.png","path":"medias/favicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo.back.png","path":"medias/logo.back.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","path":"medias/icp.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/love.jpg","path":"medias/love.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","path":"medias/logo.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/auto/article.h.min.js","path":"js/auto/article.h.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/auto/c.min.js","path":"js/auto/c.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/auto/article.min.js","path":"js/auto/article.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/auto/index.min.js","path":"js/auto/index.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/auto/interval.min.js","path":"js/auto/interval.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/auto/f.min.js","path":"js/auto/f.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/auto/h.min.js","path":"js/auto/h.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","path":"libs/jquery/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","path":"libs/awesome/webfonts/fa-brands-400.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","path":"libs/awesome/webfonts/fa-brands-400.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","path":"libs/awesome/webfonts/fa-brands-400.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","path":"libs/awesome/webfonts/fa-regular-400.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","path":"libs/awesome/webfonts/fa-regular-400.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","path":"libs/awesome/webfonts/fa-regular-400.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","path":"libs/awesome/webfonts/fa-solid-900.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","path":"libs/awesome/webfonts/fa-solid-900.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","path":"libs/awesome/webfonts/fa-solid-900.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1739709440174},{"_id":"public/2025/02/16/hello-world/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1739709854222},{"_id":"public/archives/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1739709854222},{"_id":"public/archives/2025/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1739709854222},{"_id":"public/archives/2025/02/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1739709854222},{"_id":"public/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1739709854222},{"_id":"source/about/index.md","hash":"8bd935b63205a957909e3d58d99942dc1413231f","modified":1733454498000},{"_id":"source/categories/index.md","hash":"dcdb8700bc41c558339ac2c8b96444088dcc0687","modified":1733454498000},{"_id":"source/friends/index.md","hash":"40de90f2a805233e0a9dd98618a70a56fed17de0","modified":1733454498000},{"_id":"source/images/beian.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":1733454498000},{"_id":"source/images/wxmin.jpg","hash":"4eeba2b16ddff52004a1df11cb2e093c442a3241","modified":1733454498000},{"_id":"source/tags/index.md","hash":"725c5a07fc746367eb140bf39b66a02e85418a2a","modified":1733454498000},{"_id":"source/_data/friends.json","hash":"3e8cc2d097d587125fc692d996615594dad565f8","modified":1733454498000},{"_id":"source/_posts/16749649732 copy.md","hash":"c64598a7eb9d3b98ed06fca579edff36861bdad3","modified":1739519138895},{"_id":"source/_posts/16749649732.md","hash":"79cc048dcc28cc43d010f13eb1bf8ca77cc9dbc2","modified":1739519047633},{"_id":"source/_posts/17622004249.md","hash":"cc71d2435d40b54f1327bb6bfda1863e8695da60","modified":1733454498000},{"_id":"source/_posts/README copy.md","hash":"20d146dc7f83d9ae153c0afe8c085d21c689a7c0","modified":1733454498000},{"_id":"source/_posts/README.md","hash":"20d146dc7f83d9ae153c0afe8c085d21c689a7c0","modified":1733454498000},{"_id":"source/_posts/stock-analysis.md","hash":"a4f3b21ed631b428c2daf5d4c9d0a853cac14018","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/js/auto/article.h.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/js/auto/c.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/js/auto/article.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/js/auto/interval.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/js/auto/index.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/js/auto/h.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1733454498000},{"_id":"themes/hexo-theme-matery/.gitignore","hash":"727607929a51db7ea10968f547c26041eee9cfff","modified":1733454498000},{"_id":"themes/hexo-theme-matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1733454498000},{"_id":"themes/hexo-theme-matery/README.md","hash":"14e087a7d13de010f4912fcdc3d36bc0091b70c1","modified":1733454498000},{"_id":"themes/hexo-theme-matery/README_CN.md","hash":"90547af29a466cda933e77b81a9b9cbd842df0b9","modified":1733454498000},{"_id":"themes/hexo-theme-matery/_config.yml","hash":"25bf401c6ca84e1b0157ac9cb4802fc04413e2fa","modified":1733454498000},{"_id":"themes/hexo-theme-matery/languages/default.yml","hash":"54ccc01b097c5bf6820f0edfcece1a87b78ab32d","modified":1733454498000},{"_id":"themes/hexo-theme-matery/languages/zh-CN.yml","hash":"a957b05f70265a86a87d922e18488571809d2472","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/about.ejs","hash":"87c5216e269f2ec5edb821e7b9c82ba1d1e7e4b8","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/archive.ejs","hash":"f5535b81dfae1036866d7337b6defcabba5162ae","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/category.ejs","hash":"d4d04a5264d20a06c29456d21e606f6923972422","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/categories.ejs","hash":"728665a7376048fa1d75a8ab39313aa1ebdd443d","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/contact.ejs","hash":"2747bfcf3cbf832ec7cc118ca4da557d42f98e69","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/friends.ejs","hash":"0f9c7560cf53031781b41370863236026456ffaa","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/index.ejs","hash":"afb49eb3203f9708978da077244e2af29034dd8d","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/layout.ejs","hash":"44389011495deb73f7c9b8b9455abeb4f87f37fd","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/post.ejs","hash":"0ccd2ba0ad61c136755e8db107af41e6e75fc53c","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/tags.ejs","hash":"f6343d0ca5ce11d1723e013cf5291f66a28e0bbc","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/tag.ejs","hash":"41f5050c51cfeb5177b6f9aa54de8d38eb22af37","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/favicon.png","hash":"42b9b7cb26fd768409e2ba45b470f018a99708b6","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/back-top.ejs","hash":"8d9fc2a79ba4cf136afd57b156863d7efcaf6d7a","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover-content.ejs","hash":"3b36da7a1a8fed49ee9bb3db692ad3dfd967bf5a","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/disqus.ejs","hash":"a0f53d1a9b579d52e52ccad8c6e330bf3b89547e","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/footer.ejs","hash":"d694e839d8ede59bfab72d8d4745088294261099","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/gitalk.ejs","hash":"9500f32a8e6dc9c7cc4bec49cac39a33efc0298d","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/github-link.ejs","hash":"57674833ef3d70ddc6456d5c1034df5020db743d","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/gitment.ejs","hash":"c6eb3a14decccf01630ba5e22bfcdb8a7e9943e7","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/head.ejs","hash":"36ae02ea46b27afc2a2af165ba97297e8c156cda","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/header.ejs","hash":"a7896a007118b7bea4685714f0f2fa88978d71d2","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/include_ads.ejs","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/index-cover.ejs","hash":"82af9b72ce6a1bb788b61a2cb2ed4844d2b82874","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/mobile-nav.ejs","hash":"01acd63e55eeba6f6a004f9493d7bb4194eb78bb","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/navigation.ejs","hash":"5ff6fdfe973619120a9eda4505bbff4545e39ff0","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/post-cover.ejs","hash":"d4b97fe8a255c7c4f26581024cbc3a8156b06d7c","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail.ejs","hash":"1bd43c6d158f02964c8295e0b6169e661363fcef","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs","hash":"230b4b3490a0a19c0a2d3e938a140f96b299a986","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/prev-next.ejs","hash":"a33ee190b73fa6456387e6585d2dd38bf1e12335","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/reprint-statement.ejs","hash":"4e1f8c63d244c866df3ae2bfa3438e44f98824ef","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/reward.ejs","hash":"39b570b9446a7897063fdd6d538ad476fd84f17f","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/search.ejs","hash":"33967d411719cf409c4650e4734c64a9179bc113","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/share.ejs","hash":"36fb0d22d50a9d348fc72ea0fb6c071f2c25b95b","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/social-link.ejs","hash":"6f871bd3a70f720e4e451f1f4f625cbc6d8994a4","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_partial/valine.ejs","hash":"5a5945ef60b0f8af76406ffe9850009c9fdb2c4b","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_widget/category-cloud.ejs","hash":"ef3efacd32dab51bd46cfba365746b086dd09a5b","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_widget/music.ejs","hash":"18c360e046cd3bc58e9c45ae92ced88384cc16d7","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_widget/my-projects.ejs","hash":"dbd8df5146bd6e873535e24f09dd7cf04e17a4e4","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_widget/category-radar.ejs","hash":"5725ae886faf44fd84900f01796a98d1f9bc3748","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_widget/my-gallery.ejs","hash":"b74d861fa175a494d4f7caf791024119cacc997a","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_widget/dream.ejs","hash":"ba83115ce66f4328601e567aa30f50d1410b9bfa","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_widget/my-skills.ejs","hash":"89a0092df72d23093128f2fbbdc8ca7f83ebcfd9","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_widget/post-calendar.ejs","hash":"3fa9ceb2a28929b14002d59e2d96cc4bac39eb7b","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_widget/post-charts.ejs","hash":"bff6033f89daa925e2d44c28b1dd4d21fb773dd8","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_widget/recommend.ejs","hash":"9597538199ae78a62e87c64d0b996baca7b2308b","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud-less.ejs","hash":"12ced47a4fb45567ca4a1ca235b852ca78f6a03d","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-wordcloud.ejs","hash":"77505f488f2503062bfc8b24cbf3a9caeb8d0c0d","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_widget/video.ejs","hash":"d752c9f54300a9d762433ac4a00de3cc7e79d584","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/css/matery.css","hash":"1e5fdbdad3bdb277686a7e260236b11adce2e01a","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","hash":"eeda46a83d0db1cc239a9cd27d544faf663f9883","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/js/matery.js","hash":"c8633d16813d5eed6bd5206f70020cfe1e1e07a3","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/css/my.css","hash":"524bcd4eb7dd9bf37a5727845e6bb7977f6b4f44","modified":1733454498000},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud.ejs","hash":"98588be74eb5cdba55885bce5179cfbed34a126c","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/js/search.js","hash":"2d45bc059095516c4844d7f708d78a6984db014f","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","hash":"b99aa307f522253054db0cb2acbb3575c881d12c","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpeg","hash":"b99aa307f522253054db0cb2acbb3575c881d12c","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/favicon.png","hash":"42b9b7cb26fd768409e2ba45b470f018a99708b6","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/logo.back.png","hash":"4050259723bd418648ec40028a8020364e57a6a3","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","hash":"5d1a1f3051c8a4ad70afa0a5488dfa7f0bb27bd5","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/love.jpg","hash":"9d4f2e3cc0717431f6081be12d7a125a3f66fa2f","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","hash":"63624b73690d035a0794adeeaa6ddbbfdab9ae4a","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/js/auto/f.min.js","hash":"688dbbdc77ec2a7898b43d103df48bf2a669c6d3","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","hash":"f27c113d879f014f81ea85e0bb8e905188fde573","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","hash":"940ded3ea12c2fe1ab0820d2831ec405f3f1fe9f","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","hash":"ecaef71fccd228060991c4547eaeee29af6260fd","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","hash":"f9afe8e3a9ef95ce3c25ffcc92cb27e83cf4d980","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","hash":"2a29b5167d2a95b4a529de771e860cd9c1fafea5","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","hash":"f1a5169ccfce4896f5edd043b0fb8fed1e431f0e","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","hash":"0dce56665bb74e6dbf9ec899657632ffb764d19e","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","hash":"2dd7a254e1c51c8ce158ecf1c17d3995555d811a","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","hash":"11f7b9cb17b477f2b936fd2ea4d14e77696876a8","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","hash":"fdb9bd8969872b2e7c108c7a6579ee06a32d3138","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","hash":"867d1546cd314c00eff3b4102ca1a97d647ac994","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","hash":"5b731884020928920ab22fc4cd7004e0ec0d1892","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","hash":"3498011299fe4b65ca9f768d41f795d3c7dd272c","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","hash":"afe616150b0098d2ac07873c14cdc7cc7e657375","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","hash":"906a42eb0b81cec9eefb1835bbbf53153b28aee6","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","hash":"cae61e2c4d15b8c8fbb43a6402b9dc6769725e20","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","hash":"9cac6b80b0cc8959fc8aabfbd1adcab79ebebfc9","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","hash":"5df958968ac9ff4956652aa4fef53d5632d68070","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","hash":"007f0544e22db45dc9afa3e9293dbaae684c6e5e","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","hash":"dcd59f8aafa26276f1797ea7ca21b491d83ad87c","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","hash":"f4a9fc9cd5efbb486147b42cfa7afae9bb838356","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","hash":"cc820504e4848ff02fe87568a1c4d57efc0bb9ed","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","hash":"4719bc6c5b42326a58e887fc33cd6895fab09c60","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","hash":"bf5b59d193e5ca089a7fff034c222bfa2c4dc41f","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","hash":"ed5ac9f616d3b99af5188a10b1761884c37e93e5","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","hash":"d4c7664e49d6cf15fe60ebde42760a055ac8635b","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","hash":"de28c6445bc14e4359cf77f31217a0aa0e8e2f55","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","hash":"1ece52fb132e5fdcacacd0bbe7c1bae441033c6b","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","hash":"a37c127c478bb34bce6f625131fdd6a6ae491dd1","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","hash":"a0246a4a560438938489cdd154e35f172b3f31b0","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","hash":"33e156ee3bc2613a5129a71e7a12c23afabb2f95","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","hash":"c3ce8eff8375b9f9c9d0621061248d6c83332c9c","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","hash":"fbfdbe06aebf7d0c00da175a4810cf888d128f11","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","hash":"1142b47de219dddfba2e712cd3189dec0c8b7bee","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","hash":"39150b45ec5fc03155b7ebeaa44f1829281788e2","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","hash":"18392d31ebdacd2243260b961b0ccc5fde280ceb","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","hash":"78fd3f0185f138fff9134160c041e03857cc7e81","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","hash":"8fefe38f28804f90116bdcb74a0875c9de9f3b7d","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","hash":"80ae4aa0dba3634dd9bf59586d541d2dd8d8191c","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","hash":"f9f028f635c4341b14795a32f56e7693b5400f4d","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","hash":"229afff648cbd17de80176e0feb969c7f514be7e","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","hash":"25612c76ded31c497effe46454d8d2bb36fb99d6","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1733454498000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","hash":"2c026711e4dd6b6d805cc19c0e4a572e6239a05b","modified":1733454498000}],"Category":[{"name":"编程","_id":"cm77mfkgc0006no5f2q9g6w03"},{"name":"股票","_id":"cm77mfkgh000ino5fgv3seroe"}],"Data":[{"_id":"friends","data":[{"avatar":"/medias/featureimages/2.jpg","name":"股票分析系统","introduction":"股票搜索，详情页，第三方K线图","url":"https://gitee.com/doobo/stock-analysis","title":"前去看看"},{"avatar":"/medias/featureimages/18.jpg","name":"阿里云99计划","introduction":"新老同享，低价长效，助力开发者普惠上云，99一年","url":"https://www.aliyun.com/daily-act/ecs/activity_selection?userCode=z0sut7if","title":"前去看看"},{"avatar":"/medias/featureimages/18.jpg","name":"腾讯云拼团","introduction":"2核2G云服务器低至 68元/年","url":"https://cloud.tencent.com/act/cps/redirect?redirect=6308&cps_key=c1f5e3996a42efdae02ae1762caf11d5&from=console","title":"前去看看"},{"avatar":"/medias/featureimages/9.jpg","name":"极速版卫士","introduction":"内部版本，安全力十足，无广告弹窗","url":"https://sfdl.360safe.com/netunion/20140425/360safejisu+168097+n2a27c3f091.exe","title":"下载试试"},{"avatar":"/medias/featureimages/11.jpg","name":"压缩解压","introduction":"永久免费、安全、高效，无广告，不收费","url":"https://sfdl.360safe.com/netunion/20140425/360zip_yqlm_168097.exe","title":"下载试试"},{"avatar":"/medias/featureimages/3.jpg","name":"极速浏览器","introduction":"极致速度，快如闪电，无广告弹窗","url":"https://sfdl.360safe.com/netunion/20140425/360cse+168097+n2a27c3f091.exe","title":"下载看看"},{"avatar":"/medias/featureimages/9.jpg","name":"一键安装包","introduction":"重装系统,压缩、浏览器、WPS等,一键安装","url":"https://sfdl.360safe.com/netunion/20140425/CPGenerator+168097+n2a27c3f091.exe","title":"下载看看"},{"avatar":"/medias/featureimages/10.jpg","name":"SO导航","introduction":"不能Google,玩腻Baidu,不如试试SO","url":"https://hao.360.com/?src=lm&ls=n2a27c3f091","title":"前去试试"}]}],"Page":[{"title":"关于","date":"2019-06-16T03:23:08.000Z","type":"about","layout":"about","comments":0,"_content":"## 简介\n\n你好，我是河蟹堡，欢迎参观博客。\n\n* [Arthas](https://5fu8.com)\n* [Dubbo](https://5fu8.com)\n\n\n## 联系\n* [Email: admin&#174;5fu8.com](mailto:doobo@foxmail.com)\n\n## 链接\n* [GitEE](https://5fu8.com)\n* [Github](https://5fu8.com)\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2019-06-16 11:23:08\ntype: \"about\"\nlayout: \"about\"\ncomments: false\n---\n## 简介\n\n你好，我是河蟹堡，欢迎参观博客。\n\n* [Arthas](https://5fu8.com)\n* [Dubbo](https://5fu8.com)\n\n\n## 联系\n* [Email: admin&#174;5fu8.com](mailto:doobo@foxmail.com)\n\n## 链接\n* [GitEE](https://5fu8.com)\n* [Github](https://5fu8.com)\n","updated":"2024-12-06T03:08:18.000Z","path":"about/index.html","_id":"cm77mfk8z0000no5f1k1m9mio","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>你好，我是河蟹堡，欢迎参观博客。</p>\n<ul>\n<li><a href=\"https://5fu8.com/\">Arthas</a></li>\n<li><a href=\"https://5fu8.com/\">Dubbo</a></li>\n</ul>\n<h2 id=\"联系\"><a href=\"#联系\" class=\"headerlink\" title=\"联系\"></a>联系</h2><ul>\n<li><a href=\"mailto:doobo@foxmail.com\">Email: admin&#174;5fu8.com</a></li>\n</ul>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><ul>\n<li><a href=\"https://5fu8.com/\">GitEE</a></li>\n<li><a href=\"https://5fu8.com/\">Github</a></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>你好，我是河蟹堡，欢迎参观博客。</p>\n<ul>\n<li><a href=\"https://5fu8.com/\">Arthas</a></li>\n<li><a href=\"https://5fu8.com/\">Dubbo</a></li>\n</ul>\n<h2 id=\"联系\"><a href=\"#联系\" class=\"headerlink\" title=\"联系\"></a>联系</h2><ul>\n<li><a href=\"mailto:doobo@foxmail.com\">Email: admin&#174;5fu8.com</a></li>\n</ul>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><ul>\n<li><a href=\"https://5fu8.com/\">GitEE</a></li>\n<li><a href=\"https://5fu8.com/\">Github</a></li>\n</ul>\n"},{"title":"分类","date":"2019-06-16T03:23:02.000Z","type":"categories","layout":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2019-06-16 11:23:02\ntype: \"categories\"\nlayout: \"categories\"\ncomments: false\n---\n","updated":"2024-12-06T03:08:18.000Z","path":"categories/index.html","_id":"cm77mfk9m0001no5fd6ny83vq","content":"","excerpt":"","more":""},{"title":"friends","date":"2020-02-29T12:28:22.000Z","type":"friends","layout":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2020-02-29 20:28:22\ntype: \"friends\"\nlayout: \"friends\"\n---\n","updated":"2024-12-06T03:08:18.000Z","path":"friends/index.html","_id":"cm77mfka70002no5fgvnleurd","comments":1,"content":"","excerpt":"","more":""},{"title":"标签","date":"2019-06-16T03:22:54.000Z","type":"tags","layout":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-06-16 11:22:54\ntype: \"tags\"\nlayout: \"tags\"\ncomments: false\n---\n","updated":"2024-12-06T03:08:18.000Z","path":"tags/index.html","_id":"cm77mfkae0003no5f924jh5vt","content":"","excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2025-02-16T12:38:37.975Z","updated":"2025-02-16T12:37:20.174Z","comments":1,"layout":"post","photos":[],"_id":"cm77mbuw000007g5f4yb33qr8","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"Test 日常怎样使用GIT","copyright":false,"date":"2023-01-29T04:05:00.000Z","_content":"## 同分支开发\n个人项目，小项目，基于这种方式使用GIT，也是初入编码时，使用的最对的方式。\n\n## 切换合并法\n基于特定分支切换出新分支，开发好功能，再合并到特定分支去；这种方法，特别适合那种很多人同时开发的大型项目，一个功能一个新的分支，\n也是在工作中用的最多的一种方式。\n\n## 解决冲突\n### 同分支\n同分支，有冲突，如果用工具，如idea，就直接拉取代码，点击有冲突到代码，进行合并即可。\n\n### 切换合并\n每次使用新分支开发功能的，新分支有冲突同上所述；但更多的是合并到其它分支时，有冲突，这个时候，推荐的方法是：\n* 先从要合并去的目的分支，比如master切换一个merge分支\n* 把新功能的分支，合并到新切换的merge分支，解决有冲突的代码\n* 把解决冲突的merge分支，再合并最终想要合并的(master)分支去\n这样在新分支再次补充新代码，就可以直接合并到master分支去，很少会有新到冲突产生。\n\n### 命令行\n``` shell\n# 抓取origin仓库master分支的代码\ngit fetch origin master\n# 将origin仓库master分支的代码与当前分支的代码合并(先fetch再merge)\ngit merge origin/master\n# 将origin仓库master分支的代码与当前分支的代码强制合并\ngit merge origin/master --allow-unrelated-histories\n# 查看合并后的情况（包括冲突文件）\ngit diff\n\n# 解决有冲突的提交\ngit stash           #将本地修改存储起来\ngit stash list      #查看保存的信息\ngit pull            #暂存了本地修改之后，就可以pull了\ngit stash pop stash@{0}        #还原暂存的内容, 最后解决文件中冲突的的部分\n-- Updated upstream 和=====之间的内容就是pull下来的内容，====和stashed changes之间的内容就是本地修改的内容\n```","source":"_posts/16749649732.md","raw":"---\ntitle: Test 日常怎样使用GIT\ncopyright: false\ndate: 2023-01-29 12:05:00\ntags: \n - GIT\ncategories: \n - 编程\n---\n## 同分支开发\n个人项目，小项目，基于这种方式使用GIT，也是初入编码时，使用的最对的方式。\n\n## 切换合并法\n基于特定分支切换出新分支，开发好功能，再合并到特定分支去；这种方法，特别适合那种很多人同时开发的大型项目，一个功能一个新的分支，\n也是在工作中用的最多的一种方式。\n\n## 解决冲突\n### 同分支\n同分支，有冲突，如果用工具，如idea，就直接拉取代码，点击有冲突到代码，进行合并即可。\n\n### 切换合并\n每次使用新分支开发功能的，新分支有冲突同上所述；但更多的是合并到其它分支时，有冲突，这个时候，推荐的方法是：\n* 先从要合并去的目的分支，比如master切换一个merge分支\n* 把新功能的分支，合并到新切换的merge分支，解决有冲突的代码\n* 把解决冲突的merge分支，再合并最终想要合并的(master)分支去\n这样在新分支再次补充新代码，就可以直接合并到master分支去，很少会有新到冲突产生。\n\n### 命令行\n``` shell\n# 抓取origin仓库master分支的代码\ngit fetch origin master\n# 将origin仓库master分支的代码与当前分支的代码合并(先fetch再merge)\ngit merge origin/master\n# 将origin仓库master分支的代码与当前分支的代码强制合并\ngit merge origin/master --allow-unrelated-histories\n# 查看合并后的情况（包括冲突文件）\ngit diff\n\n# 解决有冲突的提交\ngit stash           #将本地修改存储起来\ngit stash list      #查看保存的信息\ngit pull            #暂存了本地修改之后，就可以pull了\ngit stash pop stash@{0}        #还原暂存的内容, 最后解决文件中冲突的的部分\n-- Updated upstream 和=====之间的内容就是pull下来的内容，====和stashed changes之间的内容就是本地修改的内容\n```","slug":"16749649732","published":1,"updated":"2025-02-14T07:44:07.633Z","_id":"cm77mfkga0004no5f2116alut","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"同分支开发\"><a href=\"#同分支开发\" class=\"headerlink\" title=\"同分支开发\"></a>同分支开发</h2><p>个人项目，小项目，基于这种方式使用GIT，也是初入编码时，使用的最对的方式。</p>\n<h2 id=\"切换合并法\"><a href=\"#切换合并法\" class=\"headerlink\" title=\"切换合并法\"></a>切换合并法</h2><p>基于特定分支切换出新分支，开发好功能，再合并到特定分支去；这种方法，特别适合那种很多人同时开发的大型项目，一个功能一个新的分支，<br>也是在工作中用的最多的一种方式。</p>\n<h2 id=\"解决冲突\"><a href=\"#解决冲突\" class=\"headerlink\" title=\"解决冲突\"></a>解决冲突</h2><h3 id=\"同分支\"><a href=\"#同分支\" class=\"headerlink\" title=\"同分支\"></a>同分支</h3><p>同分支，有冲突，如果用工具，如idea，就直接拉取代码，点击有冲突到代码，进行合并即可。</p>\n<h3 id=\"切换合并\"><a href=\"#切换合并\" class=\"headerlink\" title=\"切换合并\"></a>切换合并</h3><p>每次使用新分支开发功能的，新分支有冲突同上所述；但更多的是合并到其它分支时，有冲突，这个时候，推荐的方法是：</p>\n<ul>\n<li>先从要合并去的目的分支，比如master切换一个merge分支</li>\n<li>把新功能的分支，合并到新切换的merge分支，解决有冲突的代码</li>\n<li>把解决冲突的merge分支，再合并最终想要合并的(master)分支去<br>这样在新分支再次补充新代码，就可以直接合并到master分支去，很少会有新到冲突产生。</li>\n</ul>\n<h3 id=\"命令行\"><a href=\"#命令行\" class=\"headerlink\" title=\"命令行\"></a>命令行</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">抓取origin仓库master分支的代码</span></span><br><span class=\"line\">git fetch origin master</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将origin仓库master分支的代码与当前分支的代码合并(先fetch再merge)</span></span><br><span class=\"line\">git merge origin/master</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将origin仓库master分支的代码与当前分支的代码强制合并</span></span><br><span class=\"line\">git merge origin/master --allow-unrelated-histories</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看合并后的情况（包括冲突文件）</span></span><br><span class=\"line\">git diff</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">解决有冲突的提交</span></span><br><span class=\"line\">git stash           #将本地修改存储起来</span><br><span class=\"line\">git stash list      #查看保存的信息</span><br><span class=\"line\">git pull            #暂存了本地修改之后，就可以pull了</span><br><span class=\"line\">git stash pop stash@&#123;0&#125;        #还原暂存的内容, 最后解决文件中冲突的的部分</span><br><span class=\"line\">-- Updated upstream 和=====之间的内容就是pull下来的内容，====和stashed changes之间的内容就是本地修改的内容</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h2 id=\"同分支开发\"><a href=\"#同分支开发\" class=\"headerlink\" title=\"同分支开发\"></a>同分支开发</h2><p>个人项目，小项目，基于这种方式使用GIT，也是初入编码时，使用的最对的方式。</p>\n<h2 id=\"切换合并法\"><a href=\"#切换合并法\" class=\"headerlink\" title=\"切换合并法\"></a>切换合并法</h2><p>基于特定分支切换出新分支，开发好功能，再合并到特定分支去；这种方法，特别适合那种很多人同时开发的大型项目，一个功能一个新的分支，<br>也是在工作中用的最多的一种方式。</p>\n<h2 id=\"解决冲突\"><a href=\"#解决冲突\" class=\"headerlink\" title=\"解决冲突\"></a>解决冲突</h2><h3 id=\"同分支\"><a href=\"#同分支\" class=\"headerlink\" title=\"同分支\"></a>同分支</h3><p>同分支，有冲突，如果用工具，如idea，就直接拉取代码，点击有冲突到代码，进行合并即可。</p>\n<h3 id=\"切换合并\"><a href=\"#切换合并\" class=\"headerlink\" title=\"切换合并\"></a>切换合并</h3><p>每次使用新分支开发功能的，新分支有冲突同上所述；但更多的是合并到其它分支时，有冲突，这个时候，推荐的方法是：</p>\n<ul>\n<li>先从要合并去的目的分支，比如master切换一个merge分支</li>\n<li>把新功能的分支，合并到新切换的merge分支，解决有冲突的代码</li>\n<li>把解决冲突的merge分支，再合并最终想要合并的(master)分支去<br>这样在新分支再次补充新代码，就可以直接合并到master分支去，很少会有新到冲突产生。</li>\n</ul>\n<h3 id=\"命令行\"><a href=\"#命令行\" class=\"headerlink\" title=\"命令行\"></a>命令行</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">抓取origin仓库master分支的代码</span></span><br><span class=\"line\">git fetch origin master</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将origin仓库master分支的代码与当前分支的代码合并(先fetch再merge)</span></span><br><span class=\"line\">git merge origin/master</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将origin仓库master分支的代码与当前分支的代码强制合并</span></span><br><span class=\"line\">git merge origin/master --allow-unrelated-histories</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看合并后的情况（包括冲突文件）</span></span><br><span class=\"line\">git diff</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">解决有冲突的提交</span></span><br><span class=\"line\">git stash           #将本地修改存储起来</span><br><span class=\"line\">git stash list      #查看保存的信息</span><br><span class=\"line\">git pull            #暂存了本地修改之后，就可以pull了</span><br><span class=\"line\">git stash pop stash@&#123;0&#125;        #还原暂存的内容, 最后解决文件中冲突的的部分</span><br><span class=\"line\">-- Updated upstream 和=====之间的内容就是pull下来的内容，====和stashed changes之间的内容就是本地修改的内容</span><br></pre></td></tr></table></figure>"},{"title":"Test 日常怎样使用GIT","copyright":false,"date":"2024-01-29T04:05:00.000Z","_content":"## 同分支开发\n个人项目，小项目，基于这种方式使用GIT，也是初入编码时，使用的最对的方式。\n\n## 切换合并法\n基于特定分支切换出新分支，开发好功能，再合并到特定分支去；这种方法，特别适合那种很多人同时开发的大型项目，一个功能一个新的分支，\n也是在工作中用的最多的一种方式。\n\n## 解决冲突\n### 同分支\n同分支，有冲突，如果用工具，如idea，就直接拉取代码，点击有冲突到代码，进行合并即可。\n\n### 切换合并\n每次使用新分支开发功能的，新分支有冲突同上所述；但更多的是合并到其它分支时，有冲突，这个时候，推荐的方法是：\n* 先从要合并去的目的分支，比如master切换一个merge分支\n* 把新功能的分支，合并到新切换的merge分支，解决有冲突的代码\n* 把解决冲突的merge分支，再合并最终想要合并的(master)分支去\n这样在新分支再次补充新代码，就可以直接合并到master分支去，很少会有新到冲突产生。\n\n### 命令行\n``` shell\n# 抓取origin仓库master分支的代码\ngit fetch origin master\n# 将origin仓库master分支的代码与当前分支的代码合并(先fetch再merge)\ngit merge origin/master\n# 将origin仓库master分支的代码与当前分支的代码强制合并\ngit merge origin/master --allow-unrelated-histories\n# 查看合并后的情况（包括冲突文件）\ngit diff\n\n# 解决有冲突的提交\ngit stash           #将本地修改存储起来\ngit stash list      #查看保存的信息\ngit pull            #暂存了本地修改之后，就可以pull了\ngit stash pop stash@{0}        #还原暂存的内容, 最后解决文件中冲突的的部分\n-- Updated upstream 和=====之间的内容就是pull下来的内容，====和stashed changes之间的内容就是本地修改的内容\n```","source":"_posts/16749649732 copy.md","raw":"---\ntitle: Test 日常怎样使用GIT\ncopyright: false\ndate: 2024-01-29 12:05:00\ntags: \n - GIT\ncategories: \n - 编程\n---\n## 同分支开发\n个人项目，小项目，基于这种方式使用GIT，也是初入编码时，使用的最对的方式。\n\n## 切换合并法\n基于特定分支切换出新分支，开发好功能，再合并到特定分支去；这种方法，特别适合那种很多人同时开发的大型项目，一个功能一个新的分支，\n也是在工作中用的最多的一种方式。\n\n## 解决冲突\n### 同分支\n同分支，有冲突，如果用工具，如idea，就直接拉取代码，点击有冲突到代码，进行合并即可。\n\n### 切换合并\n每次使用新分支开发功能的，新分支有冲突同上所述；但更多的是合并到其它分支时，有冲突，这个时候，推荐的方法是：\n* 先从要合并去的目的分支，比如master切换一个merge分支\n* 把新功能的分支，合并到新切换的merge分支，解决有冲突的代码\n* 把解决冲突的merge分支，再合并最终想要合并的(master)分支去\n这样在新分支再次补充新代码，就可以直接合并到master分支去，很少会有新到冲突产生。\n\n### 命令行\n``` shell\n# 抓取origin仓库master分支的代码\ngit fetch origin master\n# 将origin仓库master分支的代码与当前分支的代码合并(先fetch再merge)\ngit merge origin/master\n# 将origin仓库master分支的代码与当前分支的代码强制合并\ngit merge origin/master --allow-unrelated-histories\n# 查看合并后的情况（包括冲突文件）\ngit diff\n\n# 解决有冲突的提交\ngit stash           #将本地修改存储起来\ngit stash list      #查看保存的信息\ngit pull            #暂存了本地修改之后，就可以pull了\ngit stash pop stash@{0}        #还原暂存的内容, 最后解决文件中冲突的的部分\n-- Updated upstream 和=====之间的内容就是pull下来的内容，====和stashed changes之间的内容就是本地修改的内容\n```","slug":"16749649732 copy","published":1,"updated":"2025-02-14T07:45:38.895Z","_id":"cm77mfkgb0005no5f0lc777bs","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"同分支开发\"><a href=\"#同分支开发\" class=\"headerlink\" title=\"同分支开发\"></a>同分支开发</h2><p>个人项目，小项目，基于这种方式使用GIT，也是初入编码时，使用的最对的方式。</p>\n<h2 id=\"切换合并法\"><a href=\"#切换合并法\" class=\"headerlink\" title=\"切换合并法\"></a>切换合并法</h2><p>基于特定分支切换出新分支，开发好功能，再合并到特定分支去；这种方法，特别适合那种很多人同时开发的大型项目，一个功能一个新的分支，<br>也是在工作中用的最多的一种方式。</p>\n<h2 id=\"解决冲突\"><a href=\"#解决冲突\" class=\"headerlink\" title=\"解决冲突\"></a>解决冲突</h2><h3 id=\"同分支\"><a href=\"#同分支\" class=\"headerlink\" title=\"同分支\"></a>同分支</h3><p>同分支，有冲突，如果用工具，如idea，就直接拉取代码，点击有冲突到代码，进行合并即可。</p>\n<h3 id=\"切换合并\"><a href=\"#切换合并\" class=\"headerlink\" title=\"切换合并\"></a>切换合并</h3><p>每次使用新分支开发功能的，新分支有冲突同上所述；但更多的是合并到其它分支时，有冲突，这个时候，推荐的方法是：</p>\n<ul>\n<li>先从要合并去的目的分支，比如master切换一个merge分支</li>\n<li>把新功能的分支，合并到新切换的merge分支，解决有冲突的代码</li>\n<li>把解决冲突的merge分支，再合并最终想要合并的(master)分支去<br>这样在新分支再次补充新代码，就可以直接合并到master分支去，很少会有新到冲突产生。</li>\n</ul>\n<h3 id=\"命令行\"><a href=\"#命令行\" class=\"headerlink\" title=\"命令行\"></a>命令行</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">抓取origin仓库master分支的代码</span></span><br><span class=\"line\">git fetch origin master</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将origin仓库master分支的代码与当前分支的代码合并(先fetch再merge)</span></span><br><span class=\"line\">git merge origin/master</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将origin仓库master分支的代码与当前分支的代码强制合并</span></span><br><span class=\"line\">git merge origin/master --allow-unrelated-histories</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看合并后的情况（包括冲突文件）</span></span><br><span class=\"line\">git diff</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">解决有冲突的提交</span></span><br><span class=\"line\">git stash           #将本地修改存储起来</span><br><span class=\"line\">git stash list      #查看保存的信息</span><br><span class=\"line\">git pull            #暂存了本地修改之后，就可以pull了</span><br><span class=\"line\">git stash pop stash@&#123;0&#125;        #还原暂存的内容, 最后解决文件中冲突的的部分</span><br><span class=\"line\">-- Updated upstream 和=====之间的内容就是pull下来的内容，====和stashed changes之间的内容就是本地修改的内容</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h2 id=\"同分支开发\"><a href=\"#同分支开发\" class=\"headerlink\" title=\"同分支开发\"></a>同分支开发</h2><p>个人项目，小项目，基于这种方式使用GIT，也是初入编码时，使用的最对的方式。</p>\n<h2 id=\"切换合并法\"><a href=\"#切换合并法\" class=\"headerlink\" title=\"切换合并法\"></a>切换合并法</h2><p>基于特定分支切换出新分支，开发好功能，再合并到特定分支去；这种方法，特别适合那种很多人同时开发的大型项目，一个功能一个新的分支，<br>也是在工作中用的最多的一种方式。</p>\n<h2 id=\"解决冲突\"><a href=\"#解决冲突\" class=\"headerlink\" title=\"解决冲突\"></a>解决冲突</h2><h3 id=\"同分支\"><a href=\"#同分支\" class=\"headerlink\" title=\"同分支\"></a>同分支</h3><p>同分支，有冲突，如果用工具，如idea，就直接拉取代码，点击有冲突到代码，进行合并即可。</p>\n<h3 id=\"切换合并\"><a href=\"#切换合并\" class=\"headerlink\" title=\"切换合并\"></a>切换合并</h3><p>每次使用新分支开发功能的，新分支有冲突同上所述；但更多的是合并到其它分支时，有冲突，这个时候，推荐的方法是：</p>\n<ul>\n<li>先从要合并去的目的分支，比如master切换一个merge分支</li>\n<li>把新功能的分支，合并到新切换的merge分支，解决有冲突的代码</li>\n<li>把解决冲突的merge分支，再合并最终想要合并的(master)分支去<br>这样在新分支再次补充新代码，就可以直接合并到master分支去，很少会有新到冲突产生。</li>\n</ul>\n<h3 id=\"命令行\"><a href=\"#命令行\" class=\"headerlink\" title=\"命令行\"></a>命令行</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">抓取origin仓库master分支的代码</span></span><br><span class=\"line\">git fetch origin master</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将origin仓库master分支的代码与当前分支的代码合并(先fetch再merge)</span></span><br><span class=\"line\">git merge origin/master</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将origin仓库master分支的代码与当前分支的代码强制合并</span></span><br><span class=\"line\">git merge origin/master --allow-unrelated-histories</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看合并后的情况（包括冲突文件）</span></span><br><span class=\"line\">git diff</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">解决有冲突的提交</span></span><br><span class=\"line\">git stash           #将本地修改存储起来</span><br><span class=\"line\">git stash list      #查看保存的信息</span><br><span class=\"line\">git pull            #暂存了本地修改之后，就可以pull了</span><br><span class=\"line\">git stash pop stash@&#123;0&#125;        #还原暂存的内容, 最后解决文件中冲突的的部分</span><br><span class=\"line\">-- Updated upstream 和=====之间的内容就是pull下来的内容，====和stashed changes之间的内容就是本地修改的内容</span><br></pre></td></tr></table></figure>"},{"title":"Angular使用","copyright":false,"date":"2019-05-23T05:33:00.000Z","_content":"## 初始化环境\n```bash\nnpm install -g @angular/cli     #安装全局命令行\nng new ngapp                    #生成一个新项目\nng serve --open                 #启动服务器，热刷新\nng serve --proxy-config proxy.conf.json --host 0.0.0.0 --disable-host-check --port 4200 --live-reload-port 4201 #详细设置相关参数\nng serve --prod --env=dev --proxy-config proxy.conf.json --host 0.0.0.0 --disable-host-check\n# 这是生产构建\nng build --target=production --environment=prod\nng build --prod --env=prod\nng build --prod\n# 这是开发构建\nng build --target=development --environment=dev\nng build --dev --e=dev\nng build --dev\n```\n\n## 常用开发命令-组件、服务、路由\n```bash\nng generate component heroes        #生成一个heroes组件，CLI 创建了一个新的文件夹 src/app/heroes/\nng generate component hero -it      #取消模板文件,创建内联模块\nng g c --inline-template=true --inline-style=true tab   #创建内联模块\nng generate service hero            #创建一个名叫 hero 的服务\nng generate service hero --module=app   #创建服务,并把服务注入App组件中\n    #把提供商添加到根模块上，以便在任何地方都使用服务的同一个实例\nng generate module app-routing --flat --module=app #创建路由模块 \n    #--flat 把这个文件放进了 src/app 中，而不是单独的目录中\n    #--module=app 告诉 CLI 把它注册到 AppModule 的 imports 数组中\nng generate class hero              #创建一个类\n#参考地址：https://github.com/angular/angular-cli/wiki/generate-component\n#参考地址：https://www.npmjs.com/package/angular-cli-tools?activeTab=readme\n```\n\n## 页面常用指令\n```bash\n{{ hero.name | uppercase }}     #过滤器，转为大写，lowercase小写\n{{nullHero?.name}}              #替换*ngIf检测空，a?.b?.c?.d\n{{$any(hero).marker}}           #{{$any(this).member}},访问组件中未声明过的成员\n(click)=\"onSelect(hero)\"        #事件绑定方式\n<a routerLink=\"/heroes\">H</a>   #路由跳转方式\n    \n[(ngModel)]=\"hero.name\"         #input的数据双向绑定\n    #这两个的简写[ngModel]=\"hero.name\" (ngModelChange)=\"setUppercaseName($event)\"\n    #import { FormsModule } from '@angular/forms';imports: [FormsModule]需要导入对应的包\n[ngClass]=\"currentClasses\"      #绑定类样式 currentClasses = {'special':  this.isSpecial};\n[class.special]=\"isSpecial\"     #单个样式开关\n[ngStyle]=\"currentStyles\"       #绑定style对象{'font-style': this.canSave  ? 'italic' : 'normal'}\n[style.display]=\"isSpecial ? 'block' : 'none'\"  #简单样式\n[style.visibility]=\"isFirstVote?'visible':'hidden'\"\n[innerHTML]=\"aa\"                #插入HTML\t\n\n*ngFor=\"let hero of heroes;let i = index\"       #for循环语句\n[ngSwitch]=\"currentHero.emotion\" --> *ngSwitchCase=\"'happy'\" --> *ngSwitchDefault\n\n#input事件\n(focus)=\"getMatchInfo()\" #聚焦时执行 (blur)=\"getMatchInfo()\" 失焦时执行\n\n#组件内引入内容\n<ng-content select=\"[ion-fixed],ion-fab\"></ng-content>\n#空占位符\n<ng-container></ng-container>\n#模板语法,封装指令,[IF]等\n<ng-template></ng-template>\n```\n\n## Angular常用TS\n```bash\n#import {Input} from '@angular/core';\n@Input() hero: Hero;            #父子组件通信方式，数据双向绑定,可放set方法上  @Input() set name(name: string){}\n@Output('myClick') clicks       #绑定通知事件，并起别名‘myClick’\n@ViewChild(ChildenComponent) child: ChildenComponent;   #子组件实例引用\n@ViewChild(\"child\") child2;     #字符串,指向含有‘#child’的元素\n@ViewChild('childB', {read: ElementRef})    #匹配元素,html元素\n@ViewChild('childB', {read: ViewContainerRef})  #匹配元素,匹配视图容器\n@ViewChild(\"refresher\") divTop: ElementRef;     #获取html元素\n<input #phone placeholder=\"phone number\">       #模板引用变量,(click)=\"callPhone(phone.value)\" === ref-phone\n#heroForm=\"ngForm\" --> <button type=\"submit\" [disabled]=\"!heroForm.form.valid\">Submit</button>\n\n#滚动到指定锚点\n@ViewChild(\"top\",{read: ElementRef}) ticketEle;\nthis.top && this.top.nativeElement.scrollIntoView (true);\n#滚动到选中的tab\nscrollToSelect() {\n    let selected = this.ticketEle.nativeElement.querySelector(\".select\");\n    if(selected) {\n      let ofTop = selected.offsetTop;\n      this.scroll.nativeElement.scrollTo(0,ofTop);\n    }\n}\n\n#克隆页面元素\nelementRef.nativeElement.cloneNode(true)\n#移除元素\nelement.parentNode && element.parentNode.removeChild(element);\n\n#允许自定义元素，icon-content等icon-header\n@NgModule({ schemas: [CUSTOM_ELEMENTS_SCHEMA] })\n\n#事件监听一\nimport {Observable} from \"rxjs\";\nObservable.fromEvent(this.ele.nativeElement, 'scroll').subscribe((event) => {\n  console.log('scroll',32);\n});\n#事件监听二\nimport {Renderer2} from \"@angular/core\";\nthis.renderer.listen(this.ele.nativeElement, 'click', () => {\n  console.log('click',27);\n});\n\n//js阻止事件冒泡\noEvent.cancelBubble = true;\noEvent.stopPropagation();\n\n//js阻止链接默认行为，没有停止冒泡\noEvent.preventDefault(); \n\n#检测数据变化\nimport {ChangeDetectorRef} from '@angular/core';\npublic cdf: ChangeDetectorRef\nthis.cdf.detectChanges();\n\n#angular6补充\nng g pipe service/date --module ../router/bootstrap #以服务所在目录为根目录确定模块\nng g service service/http       #新建服务，可用模块名替代root\n```\n\n## ES6常用语法\n```bash\nheroes => this.heroes = heroes  #只有一个返回语句的函数\n{ name } as Hero                #把Name的值赋给Hero对象的Name属性\n{bbc}                           #把bbc变量变成键值对bbc-value对象\t\narrs.find(item => item === 1)   #数组查找指定条件的值\nheroes.filter(h => h !== hero)  #过滤数组，true时过滤掉,类似删除\noldArray.map(entry => {'abc:' + entry;})    #生成新的数组，可把数组转对象等\n/**\n * 排序，false:倒序,默认从大到小\n * @param {string} prop,{boolean} sc asc/desc\n * @returns {any}\n * this.sortArray('d30WinRatio',false);\n */\nsortArray(prop: string,sc:boolean=true) {\n    const sorted = this.list.sort((a, b) => a[prop] > b[prop] ? 1 : a[prop] === b[prop] ? 0 : -1);\n    if(!sc) sorted.reverse();\n    return sorted;\n}\n\n#对象转数组--{a:1,b:2,c:3}--->[1,2,3]\nlet arr = Object.keys(this.typeData).map(key=> this.typeData[key]);\n\n#对象拷贝增量赋值\nclass C{\n    a;\n    b;\n    getA(){return this.a}\n    getB(){return this.b}\n}\nlet tmp = new C();\nlet obj = {a:6,b:7};\nvar res = Object.assign(tmp,obj,{c:8});//{a:6,b:7,c:8}; res === tmp;\n```\n\n## 打包和优化\n```bash\nng build --prod --bh ./         #指定base href的值编译\nng build –prod –aot             #不压缩编译，生成map文件\nng build --prod --stats-json    #输出包体组成分析文件，生成 stats.json\nng build --prod --build-optimizer   #配合 UglifyJs 能够智能的移除未使用代码\nng eject                        #导出Webpack配置,.angular-cli.json添加\"ejected\": true\n```\n\n## Angular的Rest风格部署\n```bash\n#静态网站，配置Nginx\nlocation / {\n    root   html/dist;\n    try_files $uri $uri/ /index.html =404; #主要是这句\n    index  index.html index.htm;\n}\n\n#动态网站\napp.use(function (req, res) {\n    console.log(req.path);\n    if(req.path.indexOf('/api')>=0){\n        res.send(\"server text\");\n    }else{ //angular启动页\n        res.sendfile('app/index.html');\n    }\n});\n```\n\n## 常用开发技巧\n```bash\n#命令行扩展工具\nnpm install angular-cli-tools -g    #命令行扩展工具\nngt g class [class-name]            #创建类\nngt g c [component-name]            #创建组建\nngt g d [directive-name]            #创建指令\nngt g e [enum-name]                 #创建枚举\nngt g h [name]                      #创建html\nngt g index                         #创建索引\t\t\nngt g i [interface-name]            #创建接口\nngt g m [module-name]               #创建模块\nngt g p [pipe-name]                 #创建管道\nngt g r [route-name]                #创建动态路由\nngt g routing [routing-name]        #创建静态路由\nngt g s [service-name]e]            #创建服务\nngt g style [style-name]            #创建样式\n\n#添加延迟加载路由\nimport { NgModule }  from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ActivityComponent } from './activity.component';\nconst routes: Routes = [\n  { path: '', component: ActivityComponent },\n];\n@NgModule({\n  imports: [ RouterModule.forChild(routes)],\n  exports: [ RouterModule ]\n})\nexport class ActivityRouting{};\n\n/*\n{path: 'activity', loadChildren: './activity/activity.module#ActivityModule'},\n*/\n\n#常用示列\nngt update index --recursive    #更新当前目录和子目录的index索引\n#模版文件安装配置\nngt install config              #在项目跟路径创建配置文件\nngt s ./login-form.module.ts -t:form-module #使用指定文件创建form模版\nngt g m test -t:form-module     #使用刚刚创建的模版去创建test模块\n#ng更新后的命令，可以在当前目录创建对应的模块\nng update @angular/cli\nng g c --inline-template=true --inline-style=true tab   #创建内联tab模块\nng g c tab -its \t\t#上面命令简写\n\n#路由参数获取\n#route:ActivatedRoute 获取路由参数\nroute.snapshot.params['roomStatus']\nroute.queryParams['roomStatus']\nthis.router.navigate(['/activity/puzzles/ranking', {uid: 123, tid: res.model.id}])\nrouterLink=\"/activity/puzzles\"\nthis.router.navigate(['/login'],{ skipLocationChange: true });\t#防止重复跳登陆页面，url不变\nthis.router.navigate(['./ranking'],{replaceUrl:true,relativeTo:this.currentRoute});//Url改变,不添加到历史记录\n\n#监听当前页面路由变化，可以监听到历史回退\nimport {debounceTime, filter, map, mergeMap} from \"rxjs/operators\";\n#第一次加载不会触发--可放入init里面\nthis.subRouter = this.router.events\n  .pipe(filter(event => event instanceof NavigationEnd),map(() => this.route))\n  .pipe(map(route => {\n    while (route.firstChild) route = route.firstChild;\n    return route;\n  }))\n  .pipe(filter(route => route.outlet === 'primary'))\n  .pipe(mergeMap(route => route.params),debounceTime(300))\n  .subscribe((event) =>{\n    if(Number(event.uid) && Number(event.type)){\n      this.uid = +event.uid;\n      this.type = +event.type;\n    }\n  });\n\n#同路由页面替换URL参数，第一个不添加到历史记录，第二个会产生历史记录\nif (!!(window.history && history.pushState)){\n  history.replaceState({uid: this.uid, type: this.type}, '活动排名页', `#/activity/puzzles/ranking;uid=${this.uid};type=${this.type}`);\n}else{\n  //this.router.navigate(['/activity/puzzles/ranking', {uid: this.uid, type: this.type}]);\n  this.router.navigate(['./ranking'],{replaceUrl:true,relativeTo:this.currentRoute});//不添加到历史记录\n}\n\n//rxjs防抖动函数\nimport {Subject} from \"rxjs/Subject\";\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\nchangeStream: Subject<string> = new Subject<string>();\nthis.order = this.order ||\n      this.changeStream\n          .pipe(debounceTime(2000))\n          .pipe(distinctUntilChanged())\n          .subscribe(streetText => {\n              //实际业务处理\n              console.log(38);\n          });\n#调用方式\nthis.changeStream.next(this.list);\n```\n\n## 常用指令写法\n```bash\n#时间格式化\nimport { DatePipe } from '@angular/common';\nprivate datePipe: DatePipe\nthis.datePipe.transform(this.ticketInfo.flyTime, 'yyyy-MM-dd HH:mm')\n\n#ng-container：特别对for循环和if同时使用时，特别有效\n既不是一个Component，也不是一个Directive，只是单纯的一个特殊tag。ng-container可以直接包裹任何元素，包括文本，但本身不会生成元素标签，也不会影响页面样式和布局。包裹的内容，如果不通过其他指令控制，会直接渲染到页面中\n\nhttps://map.baidu.com/?qt=cur&wd=%E6%B7%B1%E5%9C%B3%E5%B8%82  //天气预报接口\nhttps://map.baidu.com/mobile/?qt=loc&x=113.9278992&y=22.543741&pois=1 //地理信息接口\n```\n## IphoneX的样式兼容\n```bash\n@media only screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) {\n    \t.iphoneTop .indexTop,\n\t    .iphoneTop .liveTop,\n\t    .iphoneTop .navBar{ padding-top: 44px;}\n\t    .betBottomBar,.messageFixed{ bottom: 34px;}\n\t    .iphoneTop .fixed_top_bar .title{ margin-top: 44px;}\n\t}\n\n#背景图平铺\n.content-bg{background: url(../images/bg_repeat.jpg) repeat-y;background-size: 100% auto;}\n\n#浏览器自带滚动条隐藏\nhtml::-webkit-scrollBar{display:none;}\n\n#解决输入框自动补全，黄色背景\ninput:-webkit-autofill,\ninput:-webkit-autofill:hover,\ninput:-webkit-autofill:focus,\ninput:-webkit-autofill:active {\n    -webkit-box-shadow: 0 0 0px 1000px #333 inset;\n    transition: background-color 50000s ease-in-out 0s, color 5000s ease-in-out 0s;\n}\n\n#这种可以解决回退后，显示黄色的背景，完美解决\ninput:-webkit-autofill {\n   -webkit-animation: autofill-fix 1s infinite;\n}\n@-webkit-keyframes autofill-fix {\n    from {\n        background-color: transparent\n    }\n    to {\n        background-color: transparent\n    }\n}\n\n#加上spinner类能让p和div等块旋转\n.spinner{\n    -webkit-animation: spin 1s linear 1s 5 alternate;\n    animation: spin 1s linear infinite;\n    display: inline-block;\n}\n@-webkit-keyframes spin {\n    from {\n        -webkit-transform: rotate(0deg);\n    }\n    to {\n        -webkit-transform: rotate(360deg);\n    }\n}\n\n@keyframes spin {\n    from {\n        transform: rotate(0deg);\n    }\n    to {\n        transform: rotate(360deg);\n    }\n}\n\n#rem单位初始化--Ts\ndeclare var window:any;\ninitWinPage(){\n    this.restWinPage(window, window.lib || (window.lib = {}));\n}\n\nprivate restWinPage(N, M) {\n    function L() {\n        let a = I.getBoundingClientRect().width;\n        a / F > 540 && (a = 540 * F);\n        let d = a / 7.5;\n        I.style.fontSize = d + \"px\", D.rem = N.rem = d\n    }\n\n    let K, J = N.document, I = J.documentElement, H = J.querySelector('meta[name=\"viewport\"]'),\n        G = J.querySelector('meta[name=\"flexible\"]'), F = 0, E = 0, D = M.flexible || (M.flexible = {});\n    if (H) {\n        // console.warn(\"将根据已有的meta标签来设置缩放比例\");\n        let C = H.getAttribute(\"content\").match(/initial\\-scale=([\\d\\.]+)/);\n        C && (E = parseFloat(C[1]), F = parseInt(''+1 / E))\n    } else {\n        if (G) {\n            let B = G.getAttribute(\"content\");\n            if (B) {\n                let A = B.match(/initial\\-dpr=([\\d\\.]+)/), z = B.match(/maximum\\-dpr=([\\d\\.]+)/);\n                A && (F = parseFloat(A[1]), E = parseFloat((1 / F).toFixed(2))), z && (F = parseFloat(z[1]), E = parseFloat((1 / F).toFixed(2)))\n            }\n        }\n    }\n    if (!F && !E) {\n        let y = N.navigator.userAgent, x = (!!y.match(/android/gi) && !!y.match(/iphone/gi)),\n            w = x && !!y.match(/OS 9_3/), v = N.devicePixelRatio;\n        F = x ? v >= 3 && (!F || F >= 3) ? 3 : v >= 2 && (!F || F >= 2) ? 2 : 1 : 1, E = 1 / F\n    }\n    if (I.setAttribute(\"data-dpr\", F), !H) {\n        if (H = J.createElement(\"meta\"), H.setAttribute(\"name\", \"viewport\"), H.setAttribute(\"content\", \"initial-scale=\" + E + \", maximum-scale=\" + E + \", minimum-scale=\" + E + \", user-scalable=no\"), I.firstElementChild) {\n            I.firstElementChild.appendChild(H)\n        } else {\n            let u = J.createElement(\"div\");\n            u.appendChild(H), J.write(u.innerHTML)\n        }\n    }\n    N.addEventListener(\"resize\", function () {\n        clearTimeout(K), K = setTimeout(L, 300)\n    }, !1), N.addEventListener(\"pageshow\", function (b) {\n        b.persisted && (clearTimeout(K), K = setTimeout(L, 300))\n    }, !1), \"complete\" === J.readyState ? J.body.style.fontSize = 12 * F + \"px\" : J.addEventListener(\"DOMContentLoaded\", function () {\n        J.body.style.fontSize = 12 * F + \"px\"\n    }, !1), L(), D.dpr = N.dpr = F, D.refreshRem = L, D.rem2px = function (d) {\n        let c:any = parseFloat(d) * this.rem;\n        return \"string\" == typeof d && d.match(/rem$/) && (c += \"px\"), c\n    }, D.px2rem = function (d) {\n        let c:any = parseFloat(d) / this.rem;\n        return \"string\" == typeof d && d.match(/px$/) && (c += \"rem\"), c\n    }\n}\n\n#iframe缩放问题\n-webkit-transform: scaleY(0.7);//Y轴方向，缩放0.6倍\n-webkit-transform-origin: 100% 100%;//缩放在右下角对齐\nmargin-top: -50px;//负值margin从而把其位置摆正确，有时需要放到包在div的外面\nmargin-left: -95px;//如果用scale全部缩放，需要设置这个值\n#缩放示例\n[style.marginTop.px]=\"cartoonHeight*0.2*-1\"\n[style.marginLeft.px]=\"cartoonWidth*0.2*-1\"\nstyle=\"transform: scale(0.8);-webkit-transform: scale(0.8);-webkit-transform-origin: 100% 100%;\"\n```\n\n## SASS常用技巧\n```bash\nnode-sass scss/app.scss css/app.css --output-style compressed\t#编译并压缩代码，-w监听\nnode-sass -w -r scss -o css --output-style compressed \t\t\t#监听scss目录，编译到css目录\n```\n\n## cookie相关设置\n```bash\n#获取根域名，以便设置到根域名上，如 .baidu.com .google.com\nfunction GetCookieDomain() {\n    var host = location.hostname;\n    var ip = /^(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])$/;\n    if (ip.test(host) === true || host === 'localhost') return host;\n    var regex = /([^]*).*/;\n    var match = host.match(regex);\n    if (typeof match !== \"undefined\" && null !== match) host = match[1];\n    if (typeof host !== \"undefined\" && null !== host) {\n        var strAry = host.split(\".\");\n        if (strAry.length > 1) {\n            host = strAry[strAry.length - 2] + \".\" + strAry[strAry.length - 1];\n        }\n    }\n    return '.' + host;\n}\n\n#设置cookie\ndocument.cookie = cname + \"=\" + cvalue + \"; expires=\" + expires + \"; domain=\" + GetCookieDomain() + \"; path=/\";\n\n#过期，当前时间减去一秒，立即过期\nexpires = (new Date().getTime() - 1000);\ndocument.cookie = \"agentId\" + \"=\" + \"123\" + \"; expires=\" + (new Date().getTime() - 1000) + \"; domain=\" + GetCookieDomain() + \"; path=/\";\n```","source":"_posts/17622004249.md","raw":"---\ntitle: Angular使用\ncopyright: false\ndate: 2019-05-23 13:33:00\ntags: \n - angular\ncategories: \n - 编程\n---\n## 初始化环境\n```bash\nnpm install -g @angular/cli     #安装全局命令行\nng new ngapp                    #生成一个新项目\nng serve --open                 #启动服务器，热刷新\nng serve --proxy-config proxy.conf.json --host 0.0.0.0 --disable-host-check --port 4200 --live-reload-port 4201 #详细设置相关参数\nng serve --prod --env=dev --proxy-config proxy.conf.json --host 0.0.0.0 --disable-host-check\n# 这是生产构建\nng build --target=production --environment=prod\nng build --prod --env=prod\nng build --prod\n# 这是开发构建\nng build --target=development --environment=dev\nng build --dev --e=dev\nng build --dev\n```\n\n## 常用开发命令-组件、服务、路由\n```bash\nng generate component heroes        #生成一个heroes组件，CLI 创建了一个新的文件夹 src/app/heroes/\nng generate component hero -it      #取消模板文件,创建内联模块\nng g c --inline-template=true --inline-style=true tab   #创建内联模块\nng generate service hero            #创建一个名叫 hero 的服务\nng generate service hero --module=app   #创建服务,并把服务注入App组件中\n    #把提供商添加到根模块上，以便在任何地方都使用服务的同一个实例\nng generate module app-routing --flat --module=app #创建路由模块 \n    #--flat 把这个文件放进了 src/app 中，而不是单独的目录中\n    #--module=app 告诉 CLI 把它注册到 AppModule 的 imports 数组中\nng generate class hero              #创建一个类\n#参考地址：https://github.com/angular/angular-cli/wiki/generate-component\n#参考地址：https://www.npmjs.com/package/angular-cli-tools?activeTab=readme\n```\n\n## 页面常用指令\n```bash\n{{ hero.name | uppercase }}     #过滤器，转为大写，lowercase小写\n{{nullHero?.name}}              #替换*ngIf检测空，a?.b?.c?.d\n{{$any(hero).marker}}           #{{$any(this).member}},访问组件中未声明过的成员\n(click)=\"onSelect(hero)\"        #事件绑定方式\n<a routerLink=\"/heroes\">H</a>   #路由跳转方式\n    \n[(ngModel)]=\"hero.name\"         #input的数据双向绑定\n    #这两个的简写[ngModel]=\"hero.name\" (ngModelChange)=\"setUppercaseName($event)\"\n    #import { FormsModule } from '@angular/forms';imports: [FormsModule]需要导入对应的包\n[ngClass]=\"currentClasses\"      #绑定类样式 currentClasses = {'special':  this.isSpecial};\n[class.special]=\"isSpecial\"     #单个样式开关\n[ngStyle]=\"currentStyles\"       #绑定style对象{'font-style': this.canSave  ? 'italic' : 'normal'}\n[style.display]=\"isSpecial ? 'block' : 'none'\"  #简单样式\n[style.visibility]=\"isFirstVote?'visible':'hidden'\"\n[innerHTML]=\"aa\"                #插入HTML\t\n\n*ngFor=\"let hero of heroes;let i = index\"       #for循环语句\n[ngSwitch]=\"currentHero.emotion\" --> *ngSwitchCase=\"'happy'\" --> *ngSwitchDefault\n\n#input事件\n(focus)=\"getMatchInfo()\" #聚焦时执行 (blur)=\"getMatchInfo()\" 失焦时执行\n\n#组件内引入内容\n<ng-content select=\"[ion-fixed],ion-fab\"></ng-content>\n#空占位符\n<ng-container></ng-container>\n#模板语法,封装指令,[IF]等\n<ng-template></ng-template>\n```\n\n## Angular常用TS\n```bash\n#import {Input} from '@angular/core';\n@Input() hero: Hero;            #父子组件通信方式，数据双向绑定,可放set方法上  @Input() set name(name: string){}\n@Output('myClick') clicks       #绑定通知事件，并起别名‘myClick’\n@ViewChild(ChildenComponent) child: ChildenComponent;   #子组件实例引用\n@ViewChild(\"child\") child2;     #字符串,指向含有‘#child’的元素\n@ViewChild('childB', {read: ElementRef})    #匹配元素,html元素\n@ViewChild('childB', {read: ViewContainerRef})  #匹配元素,匹配视图容器\n@ViewChild(\"refresher\") divTop: ElementRef;     #获取html元素\n<input #phone placeholder=\"phone number\">       #模板引用变量,(click)=\"callPhone(phone.value)\" === ref-phone\n#heroForm=\"ngForm\" --> <button type=\"submit\" [disabled]=\"!heroForm.form.valid\">Submit</button>\n\n#滚动到指定锚点\n@ViewChild(\"top\",{read: ElementRef}) ticketEle;\nthis.top && this.top.nativeElement.scrollIntoView (true);\n#滚动到选中的tab\nscrollToSelect() {\n    let selected = this.ticketEle.nativeElement.querySelector(\".select\");\n    if(selected) {\n      let ofTop = selected.offsetTop;\n      this.scroll.nativeElement.scrollTo(0,ofTop);\n    }\n}\n\n#克隆页面元素\nelementRef.nativeElement.cloneNode(true)\n#移除元素\nelement.parentNode && element.parentNode.removeChild(element);\n\n#允许自定义元素，icon-content等icon-header\n@NgModule({ schemas: [CUSTOM_ELEMENTS_SCHEMA] })\n\n#事件监听一\nimport {Observable} from \"rxjs\";\nObservable.fromEvent(this.ele.nativeElement, 'scroll').subscribe((event) => {\n  console.log('scroll',32);\n});\n#事件监听二\nimport {Renderer2} from \"@angular/core\";\nthis.renderer.listen(this.ele.nativeElement, 'click', () => {\n  console.log('click',27);\n});\n\n//js阻止事件冒泡\noEvent.cancelBubble = true;\noEvent.stopPropagation();\n\n//js阻止链接默认行为，没有停止冒泡\noEvent.preventDefault(); \n\n#检测数据变化\nimport {ChangeDetectorRef} from '@angular/core';\npublic cdf: ChangeDetectorRef\nthis.cdf.detectChanges();\n\n#angular6补充\nng g pipe service/date --module ../router/bootstrap #以服务所在目录为根目录确定模块\nng g service service/http       #新建服务，可用模块名替代root\n```\n\n## ES6常用语法\n```bash\nheroes => this.heroes = heroes  #只有一个返回语句的函数\n{ name } as Hero                #把Name的值赋给Hero对象的Name属性\n{bbc}                           #把bbc变量变成键值对bbc-value对象\t\narrs.find(item => item === 1)   #数组查找指定条件的值\nheroes.filter(h => h !== hero)  #过滤数组，true时过滤掉,类似删除\noldArray.map(entry => {'abc:' + entry;})    #生成新的数组，可把数组转对象等\n/**\n * 排序，false:倒序,默认从大到小\n * @param {string} prop,{boolean} sc asc/desc\n * @returns {any}\n * this.sortArray('d30WinRatio',false);\n */\nsortArray(prop: string,sc:boolean=true) {\n    const sorted = this.list.sort((a, b) => a[prop] > b[prop] ? 1 : a[prop] === b[prop] ? 0 : -1);\n    if(!sc) sorted.reverse();\n    return sorted;\n}\n\n#对象转数组--{a:1,b:2,c:3}--->[1,2,3]\nlet arr = Object.keys(this.typeData).map(key=> this.typeData[key]);\n\n#对象拷贝增量赋值\nclass C{\n    a;\n    b;\n    getA(){return this.a}\n    getB(){return this.b}\n}\nlet tmp = new C();\nlet obj = {a:6,b:7};\nvar res = Object.assign(tmp,obj,{c:8});//{a:6,b:7,c:8}; res === tmp;\n```\n\n## 打包和优化\n```bash\nng build --prod --bh ./         #指定base href的值编译\nng build –prod –aot             #不压缩编译，生成map文件\nng build --prod --stats-json    #输出包体组成分析文件，生成 stats.json\nng build --prod --build-optimizer   #配合 UglifyJs 能够智能的移除未使用代码\nng eject                        #导出Webpack配置,.angular-cli.json添加\"ejected\": true\n```\n\n## Angular的Rest风格部署\n```bash\n#静态网站，配置Nginx\nlocation / {\n    root   html/dist;\n    try_files $uri $uri/ /index.html =404; #主要是这句\n    index  index.html index.htm;\n}\n\n#动态网站\napp.use(function (req, res) {\n    console.log(req.path);\n    if(req.path.indexOf('/api')>=0){\n        res.send(\"server text\");\n    }else{ //angular启动页\n        res.sendfile('app/index.html');\n    }\n});\n```\n\n## 常用开发技巧\n```bash\n#命令行扩展工具\nnpm install angular-cli-tools -g    #命令行扩展工具\nngt g class [class-name]            #创建类\nngt g c [component-name]            #创建组建\nngt g d [directive-name]            #创建指令\nngt g e [enum-name]                 #创建枚举\nngt g h [name]                      #创建html\nngt g index                         #创建索引\t\t\nngt g i [interface-name]            #创建接口\nngt g m [module-name]               #创建模块\nngt g p [pipe-name]                 #创建管道\nngt g r [route-name]                #创建动态路由\nngt g routing [routing-name]        #创建静态路由\nngt g s [service-name]e]            #创建服务\nngt g style [style-name]            #创建样式\n\n#添加延迟加载路由\nimport { NgModule }  from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ActivityComponent } from './activity.component';\nconst routes: Routes = [\n  { path: '', component: ActivityComponent },\n];\n@NgModule({\n  imports: [ RouterModule.forChild(routes)],\n  exports: [ RouterModule ]\n})\nexport class ActivityRouting{};\n\n/*\n{path: 'activity', loadChildren: './activity/activity.module#ActivityModule'},\n*/\n\n#常用示列\nngt update index --recursive    #更新当前目录和子目录的index索引\n#模版文件安装配置\nngt install config              #在项目跟路径创建配置文件\nngt s ./login-form.module.ts -t:form-module #使用指定文件创建form模版\nngt g m test -t:form-module     #使用刚刚创建的模版去创建test模块\n#ng更新后的命令，可以在当前目录创建对应的模块\nng update @angular/cli\nng g c --inline-template=true --inline-style=true tab   #创建内联tab模块\nng g c tab -its \t\t#上面命令简写\n\n#路由参数获取\n#route:ActivatedRoute 获取路由参数\nroute.snapshot.params['roomStatus']\nroute.queryParams['roomStatus']\nthis.router.navigate(['/activity/puzzles/ranking', {uid: 123, tid: res.model.id}])\nrouterLink=\"/activity/puzzles\"\nthis.router.navigate(['/login'],{ skipLocationChange: true });\t#防止重复跳登陆页面，url不变\nthis.router.navigate(['./ranking'],{replaceUrl:true,relativeTo:this.currentRoute});//Url改变,不添加到历史记录\n\n#监听当前页面路由变化，可以监听到历史回退\nimport {debounceTime, filter, map, mergeMap} from \"rxjs/operators\";\n#第一次加载不会触发--可放入init里面\nthis.subRouter = this.router.events\n  .pipe(filter(event => event instanceof NavigationEnd),map(() => this.route))\n  .pipe(map(route => {\n    while (route.firstChild) route = route.firstChild;\n    return route;\n  }))\n  .pipe(filter(route => route.outlet === 'primary'))\n  .pipe(mergeMap(route => route.params),debounceTime(300))\n  .subscribe((event) =>{\n    if(Number(event.uid) && Number(event.type)){\n      this.uid = +event.uid;\n      this.type = +event.type;\n    }\n  });\n\n#同路由页面替换URL参数，第一个不添加到历史记录，第二个会产生历史记录\nif (!!(window.history && history.pushState)){\n  history.replaceState({uid: this.uid, type: this.type}, '活动排名页', `#/activity/puzzles/ranking;uid=${this.uid};type=${this.type}`);\n}else{\n  //this.router.navigate(['/activity/puzzles/ranking', {uid: this.uid, type: this.type}]);\n  this.router.navigate(['./ranking'],{replaceUrl:true,relativeTo:this.currentRoute});//不添加到历史记录\n}\n\n//rxjs防抖动函数\nimport {Subject} from \"rxjs/Subject\";\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\nchangeStream: Subject<string> = new Subject<string>();\nthis.order = this.order ||\n      this.changeStream\n          .pipe(debounceTime(2000))\n          .pipe(distinctUntilChanged())\n          .subscribe(streetText => {\n              //实际业务处理\n              console.log(38);\n          });\n#调用方式\nthis.changeStream.next(this.list);\n```\n\n## 常用指令写法\n```bash\n#时间格式化\nimport { DatePipe } from '@angular/common';\nprivate datePipe: DatePipe\nthis.datePipe.transform(this.ticketInfo.flyTime, 'yyyy-MM-dd HH:mm')\n\n#ng-container：特别对for循环和if同时使用时，特别有效\n既不是一个Component，也不是一个Directive，只是单纯的一个特殊tag。ng-container可以直接包裹任何元素，包括文本，但本身不会生成元素标签，也不会影响页面样式和布局。包裹的内容，如果不通过其他指令控制，会直接渲染到页面中\n\nhttps://map.baidu.com/?qt=cur&wd=%E6%B7%B1%E5%9C%B3%E5%B8%82  //天气预报接口\nhttps://map.baidu.com/mobile/?qt=loc&x=113.9278992&y=22.543741&pois=1 //地理信息接口\n```\n## IphoneX的样式兼容\n```bash\n@media only screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) {\n    \t.iphoneTop .indexTop,\n\t    .iphoneTop .liveTop,\n\t    .iphoneTop .navBar{ padding-top: 44px;}\n\t    .betBottomBar,.messageFixed{ bottom: 34px;}\n\t    .iphoneTop .fixed_top_bar .title{ margin-top: 44px;}\n\t}\n\n#背景图平铺\n.content-bg{background: url(../images/bg_repeat.jpg) repeat-y;background-size: 100% auto;}\n\n#浏览器自带滚动条隐藏\nhtml::-webkit-scrollBar{display:none;}\n\n#解决输入框自动补全，黄色背景\ninput:-webkit-autofill,\ninput:-webkit-autofill:hover,\ninput:-webkit-autofill:focus,\ninput:-webkit-autofill:active {\n    -webkit-box-shadow: 0 0 0px 1000px #333 inset;\n    transition: background-color 50000s ease-in-out 0s, color 5000s ease-in-out 0s;\n}\n\n#这种可以解决回退后，显示黄色的背景，完美解决\ninput:-webkit-autofill {\n   -webkit-animation: autofill-fix 1s infinite;\n}\n@-webkit-keyframes autofill-fix {\n    from {\n        background-color: transparent\n    }\n    to {\n        background-color: transparent\n    }\n}\n\n#加上spinner类能让p和div等块旋转\n.spinner{\n    -webkit-animation: spin 1s linear 1s 5 alternate;\n    animation: spin 1s linear infinite;\n    display: inline-block;\n}\n@-webkit-keyframes spin {\n    from {\n        -webkit-transform: rotate(0deg);\n    }\n    to {\n        -webkit-transform: rotate(360deg);\n    }\n}\n\n@keyframes spin {\n    from {\n        transform: rotate(0deg);\n    }\n    to {\n        transform: rotate(360deg);\n    }\n}\n\n#rem单位初始化--Ts\ndeclare var window:any;\ninitWinPage(){\n    this.restWinPage(window, window.lib || (window.lib = {}));\n}\n\nprivate restWinPage(N, M) {\n    function L() {\n        let a = I.getBoundingClientRect().width;\n        a / F > 540 && (a = 540 * F);\n        let d = a / 7.5;\n        I.style.fontSize = d + \"px\", D.rem = N.rem = d\n    }\n\n    let K, J = N.document, I = J.documentElement, H = J.querySelector('meta[name=\"viewport\"]'),\n        G = J.querySelector('meta[name=\"flexible\"]'), F = 0, E = 0, D = M.flexible || (M.flexible = {});\n    if (H) {\n        // console.warn(\"将根据已有的meta标签来设置缩放比例\");\n        let C = H.getAttribute(\"content\").match(/initial\\-scale=([\\d\\.]+)/);\n        C && (E = parseFloat(C[1]), F = parseInt(''+1 / E))\n    } else {\n        if (G) {\n            let B = G.getAttribute(\"content\");\n            if (B) {\n                let A = B.match(/initial\\-dpr=([\\d\\.]+)/), z = B.match(/maximum\\-dpr=([\\d\\.]+)/);\n                A && (F = parseFloat(A[1]), E = parseFloat((1 / F).toFixed(2))), z && (F = parseFloat(z[1]), E = parseFloat((1 / F).toFixed(2)))\n            }\n        }\n    }\n    if (!F && !E) {\n        let y = N.navigator.userAgent, x = (!!y.match(/android/gi) && !!y.match(/iphone/gi)),\n            w = x && !!y.match(/OS 9_3/), v = N.devicePixelRatio;\n        F = x ? v >= 3 && (!F || F >= 3) ? 3 : v >= 2 && (!F || F >= 2) ? 2 : 1 : 1, E = 1 / F\n    }\n    if (I.setAttribute(\"data-dpr\", F), !H) {\n        if (H = J.createElement(\"meta\"), H.setAttribute(\"name\", \"viewport\"), H.setAttribute(\"content\", \"initial-scale=\" + E + \", maximum-scale=\" + E + \", minimum-scale=\" + E + \", user-scalable=no\"), I.firstElementChild) {\n            I.firstElementChild.appendChild(H)\n        } else {\n            let u = J.createElement(\"div\");\n            u.appendChild(H), J.write(u.innerHTML)\n        }\n    }\n    N.addEventListener(\"resize\", function () {\n        clearTimeout(K), K = setTimeout(L, 300)\n    }, !1), N.addEventListener(\"pageshow\", function (b) {\n        b.persisted && (clearTimeout(K), K = setTimeout(L, 300))\n    }, !1), \"complete\" === J.readyState ? J.body.style.fontSize = 12 * F + \"px\" : J.addEventListener(\"DOMContentLoaded\", function () {\n        J.body.style.fontSize = 12 * F + \"px\"\n    }, !1), L(), D.dpr = N.dpr = F, D.refreshRem = L, D.rem2px = function (d) {\n        let c:any = parseFloat(d) * this.rem;\n        return \"string\" == typeof d && d.match(/rem$/) && (c += \"px\"), c\n    }, D.px2rem = function (d) {\n        let c:any = parseFloat(d) / this.rem;\n        return \"string\" == typeof d && d.match(/px$/) && (c += \"rem\"), c\n    }\n}\n\n#iframe缩放问题\n-webkit-transform: scaleY(0.7);//Y轴方向，缩放0.6倍\n-webkit-transform-origin: 100% 100%;//缩放在右下角对齐\nmargin-top: -50px;//负值margin从而把其位置摆正确，有时需要放到包在div的外面\nmargin-left: -95px;//如果用scale全部缩放，需要设置这个值\n#缩放示例\n[style.marginTop.px]=\"cartoonHeight*0.2*-1\"\n[style.marginLeft.px]=\"cartoonWidth*0.2*-1\"\nstyle=\"transform: scale(0.8);-webkit-transform: scale(0.8);-webkit-transform-origin: 100% 100%;\"\n```\n\n## SASS常用技巧\n```bash\nnode-sass scss/app.scss css/app.css --output-style compressed\t#编译并压缩代码，-w监听\nnode-sass -w -r scss -o css --output-style compressed \t\t\t#监听scss目录，编译到css目录\n```\n\n## cookie相关设置\n```bash\n#获取根域名，以便设置到根域名上，如 .baidu.com .google.com\nfunction GetCookieDomain() {\n    var host = location.hostname;\n    var ip = /^(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])$/;\n    if (ip.test(host) === true || host === 'localhost') return host;\n    var regex = /([^]*).*/;\n    var match = host.match(regex);\n    if (typeof match !== \"undefined\" && null !== match) host = match[1];\n    if (typeof host !== \"undefined\" && null !== host) {\n        var strAry = host.split(\".\");\n        if (strAry.length > 1) {\n            host = strAry[strAry.length - 2] + \".\" + strAry[strAry.length - 1];\n        }\n    }\n    return '.' + host;\n}\n\n#设置cookie\ndocument.cookie = cname + \"=\" + cvalue + \"; expires=\" + expires + \"; domain=\" + GetCookieDomain() + \"; path=/\";\n\n#过期，当前时间减去一秒，立即过期\nexpires = (new Date().getTime() - 1000);\ndocument.cookie = \"agentId\" + \"=\" + \"123\" + \"; expires=\" + (new Date().getTime() - 1000) + \"; domain=\" + GetCookieDomain() + \"; path=/\";\n```","slug":"17622004249","published":1,"updated":"2024-12-06T03:08:18.000Z","_id":"cm77mfkgg000eno5f1pftckfx","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"初始化环境\"><a href=\"#初始化环境\" class=\"headerlink\" title=\"初始化环境\"></a>初始化环境</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g @angular/cli     <span class=\"comment\">#安装全局命令行</span></span><br><span class=\"line\">ng new ngapp                    <span class=\"comment\">#生成一个新项目</span></span><br><span class=\"line\">ng serve --open                 <span class=\"comment\">#启动服务器，热刷新</span></span><br><span class=\"line\">ng serve --proxy-config proxy.conf.json --host 0.0.0.0 --disable-host-check --port 4200 --live-reload-port 4201 <span class=\"comment\">#详细设置相关参数</span></span><br><span class=\"line\">ng serve --prod --<span class=\"built_in\">env</span>=dev --proxy-config proxy.conf.json --host 0.0.0.0 --disable-host-check</span><br><span class=\"line\"><span class=\"comment\"># 这是生产构建</span></span><br><span class=\"line\">ng build --target=production --environment=prod</span><br><span class=\"line\">ng build --prod --<span class=\"built_in\">env</span>=prod</span><br><span class=\"line\">ng build --prod</span><br><span class=\"line\"><span class=\"comment\"># 这是开发构建</span></span><br><span class=\"line\">ng build --target=development --environment=dev</span><br><span class=\"line\">ng build --dev --e=dev</span><br><span class=\"line\">ng build --dev</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常用开发命令-组件、服务、路由\"><a href=\"#常用开发命令-组件、服务、路由\" class=\"headerlink\" title=\"常用开发命令-组件、服务、路由\"></a>常用开发命令-组件、服务、路由</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ng generate component heroes        <span class=\"comment\">#生成一个heroes组件，CLI 创建了一个新的文件夹 src/app/heroes/</span></span><br><span class=\"line\">ng generate component hero -it      <span class=\"comment\">#取消模板文件,创建内联模块</span></span><br><span class=\"line\">ng g c --inline-template=<span class=\"literal\">true</span> --inline-style=<span class=\"literal\">true</span> tab   <span class=\"comment\">#创建内联模块</span></span><br><span class=\"line\">ng generate service hero            <span class=\"comment\">#创建一个名叫 hero 的服务</span></span><br><span class=\"line\">ng generate service hero --module=app   <span class=\"comment\">#创建服务,并把服务注入App组件中</span></span><br><span class=\"line\">    <span class=\"comment\">#把提供商添加到根模块上，以便在任何地方都使用服务的同一个实例</span></span><br><span class=\"line\">ng generate module app-routing --flat --module=app <span class=\"comment\">#创建路由模块 </span></span><br><span class=\"line\">    <span class=\"comment\">#--flat 把这个文件放进了 src/app 中，而不是单独的目录中</span></span><br><span class=\"line\">    <span class=\"comment\">#--module=app 告诉 CLI 把它注册到 AppModule 的 imports 数组中</span></span><br><span class=\"line\">ng generate class hero              <span class=\"comment\">#创建一个类</span></span><br><span class=\"line\"><span class=\"comment\">#参考地址：https://github.com/angular/angular-cli/wiki/generate-component</span></span><br><span class=\"line\"><span class=\"comment\">#参考地址：https://www.npmjs.com/package/angular-cli-tools?activeTab=readme</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"页面常用指令\"><a href=\"#页面常用指令\" class=\"headerlink\" title=\"页面常用指令\"></a>页面常用指令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; hero.name | uppercase &#125;&#125;     <span class=\"comment\">#过滤器，转为大写，lowercase小写</span></span><br><span class=\"line\">&#123;&#123;nullHero?.name&#125;&#125;              <span class=\"comment\">#替换*ngIf检测空，a?.b?.c?.d</span></span><br><span class=\"line\">&#123;&#123;<span class=\"variable\">$any</span>(hero).marker&#125;&#125;           <span class=\"comment\">#&#123;&#123;$any(this).member&#125;&#125;,访问组件中未声明过的成员</span></span><br><span class=\"line\">(click)=<span class=\"string\">&quot;onSelect(hero)&quot;</span>        <span class=\"comment\">#事件绑定方式</span></span><br><span class=\"line\">&lt;a routerLink=<span class=\"string\">&quot;/heroes&quot;</span>&gt;H&lt;/a&gt;   <span class=\"comment\">#路由跳转方式</span></span><br><span class=\"line\">    </span><br><span class=\"line\">[(ngModel)]=<span class=\"string\">&quot;hero.name&quot;</span>         <span class=\"comment\">#input的数据双向绑定</span></span><br><span class=\"line\">    <span class=\"comment\">#这两个的简写[ngModel]=&quot;hero.name&quot; (ngModelChange)=&quot;setUppercaseName($event)&quot;</span></span><br><span class=\"line\">    <span class=\"comment\">#import &#123; FormsModule &#125; from &#x27;@angular/forms&#x27;;imports: [FormsModule]需要导入对应的包</span></span><br><span class=\"line\">[ngClass]=<span class=\"string\">&quot;currentClasses&quot;</span>      <span class=\"comment\">#绑定类样式 currentClasses = &#123;&#x27;special&#x27;:  this.isSpecial&#125;;</span></span><br><span class=\"line\">[class.special]=<span class=\"string\">&quot;isSpecial&quot;</span>     <span class=\"comment\">#单个样式开关</span></span><br><span class=\"line\">[ngStyle]=<span class=\"string\">&quot;currentStyles&quot;</span>       <span class=\"comment\">#绑定style对象&#123;&#x27;font-style&#x27;: this.canSave  ? &#x27;italic&#x27; : &#x27;normal&#x27;&#125;</span></span><br><span class=\"line\">[style.display]=<span class=\"string\">&quot;isSpecial ? &#x27;block&#x27; : &#x27;none&#x27;&quot;</span>  <span class=\"comment\">#简单样式</span></span><br><span class=\"line\">[style.visibility]=<span class=\"string\">&quot;isFirstVote?&#x27;visible&#x27;:&#x27;hidden&#x27;&quot;</span></span><br><span class=\"line\">[innerHTML]=<span class=\"string\">&quot;aa&quot;</span>                <span class=\"comment\">#插入HTML\t</span></span><br><span class=\"line\"></span><br><span class=\"line\">*ngFor=<span class=\"string\">&quot;let hero of heroes;let i = index&quot;</span>       <span class=\"comment\">#for循环语句</span></span><br><span class=\"line\">[ngSwitch]=<span class=\"string\">&quot;currentHero.emotion&quot;</span> --&gt; *ngSwitchCase=<span class=\"string\">&quot;&#x27;happy&#x27;&quot;</span> --&gt; *ngSwitchDefault</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#input事件</span></span><br><span class=\"line\">(focus)=<span class=\"string\">&quot;getMatchInfo()&quot;</span> <span class=\"comment\">#聚焦时执行 (blur)=&quot;getMatchInfo()&quot; 失焦时执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#组件内引入内容</span></span><br><span class=\"line\">&lt;ng-content <span class=\"keyword\">select</span>=<span class=\"string\">&quot;[ion-fixed],ion-fab&quot;</span>&gt;&lt;/ng-content&gt;</span><br><span class=\"line\"><span class=\"comment\">#空占位符</span></span><br><span class=\"line\">&lt;ng-container&gt;&lt;/ng-container&gt;</span><br><span class=\"line\"><span class=\"comment\">#模板语法,封装指令,[IF]等</span></span><br><span class=\"line\">&lt;ng-template&gt;&lt;/ng-template&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Angular常用TS\"><a href=\"#Angular常用TS\" class=\"headerlink\" title=\"Angular常用TS\"></a>Angular常用TS</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#import &#123;Input&#125; from &#x27;@angular/core&#x27;;</span></span><br><span class=\"line\">@Input() hero: Hero;            <span class=\"comment\">#父子组件通信方式，数据双向绑定,可放set方法上  @Input() set name(name: string)&#123;&#125;</span></span><br><span class=\"line\">@Output(<span class=\"string\">&#x27;myClick&#x27;</span>) clicks       <span class=\"comment\">#绑定通知事件，并起别名‘myClick’</span></span><br><span class=\"line\">@ViewChild(ChildenComponent) child: ChildenComponent;   <span class=\"comment\">#子组件实例引用</span></span><br><span class=\"line\">@ViewChild(<span class=\"string\">&quot;child&quot;</span>) child2;     <span class=\"comment\">#字符串,指向含有‘#child’的元素</span></span><br><span class=\"line\">@ViewChild(<span class=\"string\">&#x27;childB&#x27;</span>, &#123;<span class=\"built_in\">read</span>: ElementRef&#125;)    <span class=\"comment\">#匹配元素,html元素</span></span><br><span class=\"line\">@ViewChild(<span class=\"string\">&#x27;childB&#x27;</span>, &#123;<span class=\"built_in\">read</span>: ViewContainerRef&#125;)  <span class=\"comment\">#匹配元素,匹配视图容器</span></span><br><span class=\"line\">@ViewChild(<span class=\"string\">&quot;refresher&quot;</span>) divTop: ElementRef;     <span class=\"comment\">#获取html元素</span></span><br><span class=\"line\">&lt;input <span class=\"comment\">#phone placeholder=&quot;phone number&quot;&gt;       #模板引用变量,(click)=&quot;callPhone(phone.value)&quot; === ref-phone</span></span><br><span class=\"line\"><span class=\"comment\">#heroForm=&quot;ngForm&quot; --&gt; &lt;button type=&quot;submit&quot; [disabled]=&quot;!heroForm.form.valid&quot;&gt;Submit&lt;/button&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#滚动到指定锚点</span></span><br><span class=\"line\">@ViewChild(<span class=\"string\">&quot;top&quot;</span>,&#123;<span class=\"built_in\">read</span>: ElementRef&#125;) ticketEle;</span><br><span class=\"line\">this.top &amp;&amp; this.top.nativeElement.scrollIntoView (<span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"comment\">#滚动到选中的tab</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">scrollToSelect</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">let</span> selected = this.ticketEle.nativeElement.querySelector(<span class=\"string\">&quot;.select&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(selected) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">let</span> ofTop = selected.offsetTop;</span><br><span class=\"line\">      this.scroll.nativeElement.scrollTo(0,ofTop);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#克隆页面元素</span></span><br><span class=\"line\">elementRef.nativeElement.cloneNode(<span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"comment\">#移除元素</span></span><br><span class=\"line\">element.parentNode &amp;&amp; element.parentNode.removeChild(element);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#允许自定义元素，icon-content等icon-header</span></span><br><span class=\"line\">@NgModule(&#123; schemas: [CUSTOM_ELEMENTS_SCHEMA] &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#事件监听一</span></span><br><span class=\"line\">import &#123;Observable&#125; from <span class=\"string\">&quot;rxjs&quot;</span>;</span><br><span class=\"line\">Observable.fromEvent(this.ele.nativeElement, <span class=\"string\">&#x27;scroll&#x27;</span>).subscribe((event) =&gt; &#123;</span><br><span class=\"line\">  console.log(&#x27;scroll&#x27;,<span class=\"number\">32</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">#事件监听二</span><br><span class=\"line\">import &#123;Renderer2&#125; from &quot;@angular/core&quot;;</span><br><span class=\"line\">this.renderer.listen(this.ele.nativeElement, &#x27;click&#x27;, () =&gt; &#123;</span><br><span class=\"line\">  console.log(&#x27;click&#x27;,<span class=\"number\">27</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">//js阻止事件冒泡</span><br><span class=\"line\">oEvent.cancelBubble = true;</span><br><span class=\"line\">oEvent.stopPropagation();</span><br><span class=\"line\"></span><br><span class=\"line\">//js阻止链接默认行为，没有停止冒泡</span><br><span class=\"line\">oEvent.preventDefault(); </span><br><span class=\"line\"></span><br><span class=\"line\">#检测数据变化</span><br><span class=\"line\">import &#123;ChangeDetectorRef&#125; from &#x27;@angular/core&#x27;;</span><br><span class=\"line\">public cdf: ChangeDetectorRef</span><br><span class=\"line\">this.cdf.detectChanges();</span><br><span class=\"line\"></span><br><span class=\"line\">#angular6补充</span><br><span class=\"line\">ng g pipe service/date --module ../router/bootstrap #以服务所在目录为根目录确定模块</span><br><span class=\"line\">ng g service service/http       #新建服务，可用模块名替代root</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ES6常用语法\"><a href=\"#ES6常用语法\" class=\"headerlink\" title=\"ES6常用语法\"></a>ES6常用语法</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">heroes =&gt; this.heroes = heroes  <span class=\"comment\">#只有一个返回语句的函数</span></span><br><span class=\"line\">&#123; name &#125; as Hero                <span class=\"comment\">#把Name的值赋给Hero对象的Name属性</span></span><br><span class=\"line\">&#123;bbc&#125;                           <span class=\"comment\">#把bbc变量变成键值对bbc-value对象\t</span></span><br><span class=\"line\">arrs.find(item =&gt; item === 1)   <span class=\"comment\">#数组查找指定条件的值</span></span><br><span class=\"line\">heroes.filter(h =&gt; h !== hero)  <span class=\"comment\">#过滤数组，true时过滤掉,类似删除</span></span><br><span class=\"line\">oldArray.map(entry =&gt; &#123;<span class=\"string\">&#x27;abc:&#x27;</span> + entry;&#125;)    <span class=\"comment\">#生成新的数组，可把数组转对象等</span></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 排序，<span class=\"literal\">false</span>:倒序,默认从大到小</span><br><span class=\"line\"> * @param &#123;string&#125; prop,&#123;boolean&#125; sc asc/desc</span><br><span class=\"line\"> * @returns &#123;any&#125;</span><br><span class=\"line\"> * this.sortArray(<span class=\"string\">&#x27;d30WinRatio&#x27;</span>,<span class=\"literal\">false</span>);</span><br><span class=\"line\"> */</span><br><span class=\"line\">sortArray(prop: string,sc:boolean=<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    const sorted = this.list.sort((a, b) =&gt; a[prop] &gt; b[prop] ? <span class=\"number\">1</span> : a[prop] === b[prop] ? <span class=\"number\">0</span> : -<span class=\"number\">1</span>);</span><br><span class=\"line\">    if(!sc) sorted.reverse();</span><br><span class=\"line\">    return sorted;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#对象转数组--&#123;a:<span class=\"number\">1</span>,b:<span class=\"number\">2</span>,c:<span class=\"number\">3</span>&#125;---&gt;[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">let arr = Object.keys(this.typeData).map(key=&gt; this.typeData[key]);</span><br><span class=\"line\"></span><br><span class=\"line\">#对象拷贝增量赋值</span><br><span class=\"line\">class C&#123;</span><br><span class=\"line\">    a;</span><br><span class=\"line\">    b;</span><br><span class=\"line\">    getA()&#123;return this.a&#125;</span><br><span class=\"line\">    getB()&#123;return this.b&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">let tmp = new C();</span><br><span class=\"line\">let obj = &#123;a:<span class=\"number\">6</span>,b:<span class=\"number\">7</span>&#125;;</span><br><span class=\"line\">var res = Object.assign(tmp,obj,&#123;c:<span class=\"number\">8</span>&#125;);//&#123;a:<span class=\"number\">6</span>,b:<span class=\"number\">7</span>,c:<span class=\"number\">8</span>&#125;; res === tmp;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"打包和优化\"><a href=\"#打包和优化\" class=\"headerlink\" title=\"打包和优化\"></a>打包和优化</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ng build --prod --bh ./         <span class=\"comment\">#指定base href的值编译</span></span><br><span class=\"line\">ng build –prod –aot             <span class=\"comment\">#不压缩编译，生成map文件</span></span><br><span class=\"line\">ng build --prod --stats-json    <span class=\"comment\">#输出包体组成分析文件，生成 stats.json</span></span><br><span class=\"line\">ng build --prod --build-optimizer   <span class=\"comment\">#配合 UglifyJs 能够智能的移除未使用代码</span></span><br><span class=\"line\">ng eject                        <span class=\"comment\">#导出Webpack配置,.angular-cli.json添加&quot;ejected&quot;: true</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Angular的Rest风格部署\"><a href=\"#Angular的Rest风格部署\" class=\"headerlink\" title=\"Angular的Rest风格部署\"></a>Angular的Rest风格部署</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#静态网站，配置Nginx</span></span><br><span class=\"line\">location / &#123;</span><br><span class=\"line\">    root   html/dist;</span><br><span class=\"line\">    try_files <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ /index.html =404; <span class=\"comment\">#主要是这句</span></span><br><span class=\"line\">    index  index.html index.htm;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#动态网站</span></span><br><span class=\"line\">app.use(<span class=\"keyword\">function</span> (req, res) &#123;</span><br><span class=\"line\">    console.log(req.path);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(req.path.indexOf(<span class=\"string\">&#x27;/api&#x27;</span>)&gt;=0)&#123;</span><br><span class=\"line\">        res.send(<span class=\"string\">&quot;server text&quot;</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123; //angular启动页</span><br><span class=\"line\">        res.sendfile(<span class=\"string\">&#x27;app/index.html&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常用开发技巧\"><a href=\"#常用开发技巧\" class=\"headerlink\" title=\"常用开发技巧\"></a>常用开发技巧</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#命令行扩展工具</span></span><br><span class=\"line\">npm install angular-cli-tools -g    <span class=\"comment\">#命令行扩展工具</span></span><br><span class=\"line\">ngt g class [class-name]            <span class=\"comment\">#创建类</span></span><br><span class=\"line\">ngt g c [component-name]            <span class=\"comment\">#创建组建</span></span><br><span class=\"line\">ngt g d [directive-name]            <span class=\"comment\">#创建指令</span></span><br><span class=\"line\">ngt g e [enum-name]                 <span class=\"comment\">#创建枚举</span></span><br><span class=\"line\">ngt g h [name]                      <span class=\"comment\">#创建html</span></span><br><span class=\"line\">ngt g index                         <span class=\"comment\">#创建索引\t\t</span></span><br><span class=\"line\">ngt g i [interface-name]            <span class=\"comment\">#创建接口</span></span><br><span class=\"line\">ngt g m [module-name]               <span class=\"comment\">#创建模块</span></span><br><span class=\"line\">ngt g p [pipe-name]                 <span class=\"comment\">#创建管道</span></span><br><span class=\"line\">ngt g r [route-name]                <span class=\"comment\">#创建动态路由</span></span><br><span class=\"line\">ngt g routing [routing-name]        <span class=\"comment\">#创建静态路由</span></span><br><span class=\"line\">ngt g s [service-name]e]            <span class=\"comment\">#创建服务</span></span><br><span class=\"line\">ngt g style [style-name]            <span class=\"comment\">#创建样式</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#添加延迟加载路由</span></span><br><span class=\"line\">import &#123; NgModule &#125;  from <span class=\"string\">&#x27;@angular/core&#x27;</span>;</span><br><span class=\"line\">import &#123; Routes, RouterModule &#125; from <span class=\"string\">&#x27;@angular/router&#x27;</span>;</span><br><span class=\"line\">import &#123; ActivityComponent &#125; from <span class=\"string\">&#x27;./activity.component&#x27;</span>;</span><br><span class=\"line\">const routes: Routes = [</span><br><span class=\"line\">  &#123; path: <span class=\"string\">&#x27;&#x27;</span>, component: ActivityComponent &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\">@NgModule(&#123;</span><br><span class=\"line\">  imports: [ RouterModule.forChild(routes)],</span><br><span class=\"line\">  exports: [ RouterModule ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">export</span> class ActivityRouting&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\">&#123;path: <span class=\"string\">&#x27;activity&#x27;</span>, loadChildren: <span class=\"string\">&#x27;./activity/activity.module#ActivityModule&#x27;</span>&#125;,</span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#常用示列</span></span><br><span class=\"line\">ngt update index --recursive    <span class=\"comment\">#更新当前目录和子目录的index索引</span></span><br><span class=\"line\"><span class=\"comment\">#模版文件安装配置</span></span><br><span class=\"line\">ngt install config              <span class=\"comment\">#在项目跟路径创建配置文件</span></span><br><span class=\"line\">ngt s ./login-form.module.ts -t:form-module <span class=\"comment\">#使用指定文件创建form模版</span></span><br><span class=\"line\">ngt g m <span class=\"built_in\">test</span> -t:form-module     <span class=\"comment\">#使用刚刚创建的模版去创建test模块</span></span><br><span class=\"line\"><span class=\"comment\">#ng更新后的命令，可以在当前目录创建对应的模块</span></span><br><span class=\"line\">ng update @angular/cli</span><br><span class=\"line\">ng g c --inline-template=<span class=\"literal\">true</span> --inline-style=<span class=\"literal\">true</span> tab   <span class=\"comment\">#创建内联tab模块</span></span><br><span class=\"line\">ng g c tab -its \t\t<span class=\"comment\">#上面命令简写</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#路由参数获取</span></span><br><span class=\"line\"><span class=\"comment\">#route:ActivatedRoute 获取路由参数</span></span><br><span class=\"line\">route.snapshot.params[<span class=\"string\">&#x27;roomStatus&#x27;</span>]</span><br><span class=\"line\">route.queryParams[<span class=\"string\">&#x27;roomStatus&#x27;</span>]</span><br><span class=\"line\">this.router.navigate([<span class=\"string\">&#x27;/activity/puzzles/ranking&#x27;</span>, &#123;uid: 123, tid: res.model.id&#125;])</span><br><span class=\"line\">routerLink=<span class=\"string\">&quot;/activity/puzzles&quot;</span></span><br><span class=\"line\">this.router.navigate([<span class=\"string\">&#x27;/login&#x27;</span>],&#123; skipLocationChange: <span class=\"literal\">true</span> &#125;);\t<span class=\"comment\">#防止重复跳登陆页面，url不变</span></span><br><span class=\"line\">this.router.navigate([<span class=\"string\">&#x27;./ranking&#x27;</span>],&#123;replaceUrl:<span class=\"literal\">true</span>,relativeTo:this.currentRoute&#125;);//Url改变,不添加到历史记录</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#监听当前页面路由变化，可以监听到历史回退</span></span><br><span class=\"line\">import &#123;debounceTime, filter, map, mergeMap&#125; from <span class=\"string\">&quot;rxjs/operators&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">#第一次加载不会触发--可放入init里面</span></span><br><span class=\"line\">this.subRouter = this.router.events</span><br><span class=\"line\">  .pipe(filter(event =&gt; event instanceof NavigationEnd),map(() =&gt; this.route))</span><br><span class=\"line\">  .pipe(map(route =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (route.firstChild) route = route.firstChild;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> route;</span><br><span class=\"line\">  &#125;))</span><br><span class=\"line\">  .pipe(filter(route =&gt; route.outlet === <span class=\"string\">&#x27;primary&#x27;</span>))</span><br><span class=\"line\">  .pipe(mergeMap(route =&gt; route.params),debounceTime(300))</span><br><span class=\"line\">  .subscribe((event) =&gt;&#123;</span><br><span class=\"line\">    if(Number(event.uid) &amp;&amp; Number(event.type))&#123;</span><br><span class=\"line\">      this.uid = +event.uid;</span><br><span class=\"line\">      this.type = +event.type;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#同路由页面替换URL参数，第一个不添加到历史记录，第二个会产生历史记录</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!!(window.history &amp;&amp; history.pushState))&#123;</span><br><span class=\"line\">  history.replaceState(&#123;uid: this.uid, <span class=\"built_in\">type</span>: this.type&#125;, <span class=\"string\">&#x27;活动排名页&#x27;</span>, `#/activity/puzzles/ranking;uid=<span class=\"variable\">$&#123;this.uid&#125;</span>;<span class=\"built_in\">type</span>=<span class=\"variable\">$&#123;this.type&#125;</span>`);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">  //this.router.navigate([<span class=\"string\">&#x27;/activity/puzzles/ranking&#x27;</span>, &#123;uid: this.uid, <span class=\"built_in\">type</span>: this.type&#125;]);</span><br><span class=\"line\">  this.router.navigate([<span class=\"string\">&#x27;./ranking&#x27;</span>],&#123;replaceUrl:<span class=\"literal\">true</span>,relativeTo:this.currentRoute&#125;);//不添加到历史记录</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//rxjs防抖动函数</span><br><span class=\"line\">import &#123;Subject&#125; from <span class=\"string\">&quot;rxjs/Subject&quot;</span>;</span><br><span class=\"line\">import &#123;debounceTime, distinctUntilChanged&#125; from <span class=\"string\">&#x27;rxjs/operators&#x27;</span>;</span><br><span class=\"line\">changeStream: Subject&lt;string&gt; = new Subject&lt;string&gt;();</span><br><span class=\"line\">this.order = this.order ||</span><br><span class=\"line\">      this.changeStream</span><br><span class=\"line\">          .pipe(debounceTime(2000))</span><br><span class=\"line\">          .pipe(distinctUntilChanged())</span><br><span class=\"line\">          .subscribe(streetText =&gt; &#123;</span><br><span class=\"line\">              //实际业务处理</span><br><span class=\"line\">              console.log(38);</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"><span class=\"comment\">#调用方式</span></span><br><span class=\"line\">this.changeStream.next(this.list);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常用指令写法\"><a href=\"#常用指令写法\" class=\"headerlink\" title=\"常用指令写法\"></a>常用指令写法</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#时间格式化</span></span><br><span class=\"line\">import &#123; DatePipe &#125; from <span class=\"string\">&#x27;@angular/common&#x27;</span>;</span><br><span class=\"line\">private datePipe: DatePipe</span><br><span class=\"line\">this.datePipe.transform(this.ticketInfo.flyTime, <span class=\"string\">&#x27;yyyy-MM-dd HH:mm&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#ng-container：特别对for循环和if同时使用时，特别有效</span></span><br><span class=\"line\">既不是一个Component，也不是一个Directive，只是单纯的一个特殊tag。ng-container可以直接包裹任何元素，包括文本，但本身不会生成元素标签，也不会影响页面样式和布局。包裹的内容，如果不通过其他指令控制，会直接渲染到页面中</span><br><span class=\"line\"></span><br><span class=\"line\">https://map.baidu.com/?qt=cur&amp;wd=%E6%B7%B1%E5%9C%B3%E5%B8%82  //天气预报接口</span><br><span class=\"line\">https://map.baidu.com/mobile/?qt=loc&amp;x=113.9278992&amp;y=22.543741&amp;pois=1 //地理信息接口</span><br></pre></td></tr></table></figure>\n<h2 id=\"IphoneX的样式兼容\"><a href=\"#IphoneX的样式兼容\" class=\"headerlink\" title=\"IphoneX的样式兼容\"></a>IphoneX的样式兼容</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@media only screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) &#123;</span><br><span class=\"line\">    \t.iphoneTop .indexTop,</span><br><span class=\"line\">\t    .iphoneTop .liveTop,</span><br><span class=\"line\">\t    .iphoneTop .navBar&#123; padding-top: 44px;&#125;</span><br><span class=\"line\">\t    .betBottomBar,.messageFixed&#123; bottom: 34px;&#125;</span><br><span class=\"line\">\t    .iphoneTop .fixed_top_bar .title&#123; margin-top: 44px;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#背景图平铺</span></span><br><span class=\"line\">.content-bg&#123;background: url(../images/bg_repeat.jpg) repeat-y;background-size: 100% auto;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#浏览器自带滚动条隐藏</span></span><br><span class=\"line\">html::-webkit-scrollBar&#123;display:none;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#解决输入框自动补全，黄色背景</span></span><br><span class=\"line\">input:-webkit-autofill,</span><br><span class=\"line\">input:-webkit-autofill:hover,</span><br><span class=\"line\">input:-webkit-autofill:focus,</span><br><span class=\"line\">input:-webkit-autofill:active &#123;</span><br><span class=\"line\">    -webkit-box-shadow: 0 0 0px 1000px <span class=\"comment\">#333 inset;</span></span><br><span class=\"line\">    transition: background-color 50000s ease-in-out 0s, color 5000s ease-in-out 0s;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#这种可以解决回退后，显示黄色的背景，完美解决</span></span><br><span class=\"line\">input:-webkit-autofill &#123;</span><br><span class=\"line\">   -webkit-animation: autofill-fix 1s infinite;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@-webkit-keyframes autofill-fix &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        background-color: transparent</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        background-color: transparent</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#加上spinner类能让p和div等块旋转</span></span><br><span class=\"line\">.spinner&#123;</span><br><span class=\"line\">    -webkit-animation: spin 1s linear 1s 5 alternate;</span><br><span class=\"line\">    animation: spin 1s linear infinite;</span><br><span class=\"line\">    display: inline-block;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@-webkit-keyframes spin &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        -webkit-transform: rotate(0deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        -webkit-transform: rotate(360deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@keyframes spin &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform: rotate(0deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform: rotate(360deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#rem单位初始化--Ts</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> var window:any;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">initWinPage</span></span>()&#123;</span><br><span class=\"line\">    this.restWinPage(window, window.lib || (window.lib = &#123;&#125;));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">private restWinPage(N, M) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">L</span></span>() &#123;</span><br><span class=\"line\">        <span class=\"built_in\">let</span> a = I.getBoundingClientRect().width;</span><br><span class=\"line\">        a / F &gt; 540 &amp;&amp; (a = 540 * F);</span><br><span class=\"line\">        <span class=\"built_in\">let</span> d = a / 7.5;</span><br><span class=\"line\">        I.style.fontSize = d + <span class=\"string\">&quot;px&quot;</span>, D.rem = N.rem = d</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">let</span> K, J = N.document, I = J.documentElement, H = J.querySelector(<span class=\"string\">&#x27;meta[name=&quot;viewport&quot;]&#x27;</span>),</span><br><span class=\"line\">        G = J.querySelector(<span class=\"string\">&#x27;meta[name=&quot;flexible&quot;]&#x27;</span>), F = 0, E = 0, D = M.flexible || (M.flexible = &#123;&#125;);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (H) &#123;</span><br><span class=\"line\">        // console.warn(<span class=\"string\">&quot;将根据已有的meta标签来设置缩放比例&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">let</span> C = H.getAttribute(<span class=\"string\">&quot;content&quot;</span>).match(/initial\\-scale=([\\d\\.]+)/);</span><br><span class=\"line\">        C &amp;&amp; (E = parseFloat(C[1]), F = parseInt(<span class=\"string\">&#x27;&#x27;</span>+1 / E))</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (G) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">let</span> B = G.getAttribute(<span class=\"string\">&quot;content&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (B) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">let</span> A = B.match(/initial\\-dpr=([\\d\\.]+)/), z = B.match(/maximum\\-dpr=([\\d\\.]+)/);</span><br><span class=\"line\">                A &amp;&amp; (F = parseFloat(A[1]), E = parseFloat((<span class=\"number\">1</span> / F).toFixed(<span class=\"number\">2</span>))), z &amp;&amp; (F = parseFloat(z[1]), E = parseFloat((<span class=\"number\">1</span> / F).toFixed(<span class=\"number\">2</span>)))</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!F &amp;&amp; !E) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">let</span> y = N.navigator.userAgent, x = (!!y.match(/android/gi) &amp;&amp; !!y.match(/iphone/gi)),</span><br><span class=\"line\">            w = x &amp;&amp; !!y.match(/OS 9_3/), v = N.devicePixelRatio;</span><br><span class=\"line\">        F = x ? v &gt;= 3 &amp;&amp; (!F || F &gt;= 3) ? 3 : v &gt;= 2 &amp;&amp; (!F || F &gt;= 2) ? 2 : 1 : 1, E = 1 / F</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (I.setAttribute(<span class=\"string\">&quot;data-dpr&quot;</span>, F), !H) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (H = J.createElement(<span class=\"string\">&quot;meta&quot;</span>), H.setAttribute(<span class=\"string\">&quot;name&quot;</span>, <span class=\"string\">&quot;viewport&quot;</span>), H.setAttribute(<span class=\"string\">&quot;content&quot;</span>, <span class=\"string\">&quot;initial-scale=&quot;</span> + E + <span class=\"string\">&quot;, maximum-scale=&quot;</span> + E + <span class=\"string\">&quot;, minimum-scale=&quot;</span> + E + <span class=\"string\">&quot;, user-scalable=no&quot;</span>), I.firstElementChild) &#123;</span><br><span class=\"line\">            I.firstElementChild.appendChild(H)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">let</span> u = J.createElement(<span class=\"string\">&quot;div&quot;</span>);</span><br><span class=\"line\">            u.appendChild(H), J.write(u.innerHTML)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    N.addEventListener(<span class=\"string\">&quot;resize&quot;</span>, <span class=\"function\"><span class=\"title\">function</span></span> () &#123;</span><br><span class=\"line\">        clearTimeout(K), K = setTimeout(L, 300)</span><br><span class=\"line\">    &#125;, !1), N.addEventListener(<span class=\"string\">&quot;pageshow&quot;</span>, <span class=\"keyword\">function</span> (b) &#123;</span><br><span class=\"line\">        b.persisted &amp;&amp; (clearTimeout(K), K = setTimeout(L, 300))</span><br><span class=\"line\">    &#125;, !1), <span class=\"string\">&quot;complete&quot;</span> === J.readyState ? J.body.style.fontSize = 12 * F + <span class=\"string\">&quot;px&quot;</span> : J.addEventListener(<span class=\"string\">&quot;DOMContentLoaded&quot;</span>, <span class=\"function\"><span class=\"title\">function</span></span> () &#123;</span><br><span class=\"line\">        J.body.style.fontSize = 12 * F + <span class=\"string\">&quot;px&quot;</span></span><br><span class=\"line\">    &#125;, !1), L(), D.dpr = N.dpr = F, D.refreshRem = L, D.rem2px = <span class=\"keyword\">function</span> (d) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">let</span> c:any = parseFloat(d) * this.rem;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> <span class=\"string\">&quot;string&quot;</span> == typeof d &amp;&amp; d.match(/rem$/) &amp;&amp; (c += <span class=\"string\">&quot;px&quot;</span>), c</span><br><span class=\"line\">    &#125;, D.px2rem = <span class=\"keyword\">function</span> (d) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">let</span> c:any = parseFloat(d) / this.rem;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> <span class=\"string\">&quot;string&quot;</span> == typeof d &amp;&amp; d.match(/px$/) &amp;&amp; (c += <span class=\"string\">&quot;rem&quot;</span>), c</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#iframe缩放问题</span></span><br><span class=\"line\">-webkit-transform: scaleY(0.7);//Y轴方向，缩放0.6倍</span><br><span class=\"line\">-webkit-transform-origin: 100% 100%;//缩放在右下角对齐</span><br><span class=\"line\">margin-top: -50px;//负值margin从而把其位置摆正确，有时需要放到包在div的外面</span><br><span class=\"line\">margin-left: -95px;//如果用scale全部缩放，需要设置这个值</span><br><span class=\"line\"><span class=\"comment\">#缩放示例</span></span><br><span class=\"line\">[style.marginTop.px]=<span class=\"string\">&quot;cartoonHeight*0.2*-1&quot;</span></span><br><span class=\"line\">[style.marginLeft.px]=<span class=\"string\">&quot;cartoonWidth*0.2*-1&quot;</span></span><br><span class=\"line\">style=<span class=\"string\">&quot;transform: scale(0.8);-webkit-transform: scale(0.8);-webkit-transform-origin: 100% 100%;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SASS常用技巧\"><a href=\"#SASS常用技巧\" class=\"headerlink\" title=\"SASS常用技巧\"></a>SASS常用技巧</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node-sass scss/app.scss css/app.css --output-style compressed\t<span class=\"comment\">#编译并压缩代码，-w监听</span></span><br><span class=\"line\">node-sass -w -r scss -o css --output-style compressed \t\t\t<span class=\"comment\">#监听scss目录，编译到css目录</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"cookie相关设置\"><a href=\"#cookie相关设置\" class=\"headerlink\" title=\"cookie相关设置\"></a>cookie相关设置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#获取根域名，以便设置到根域名上，如 .baidu.com .google.com</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">GetCookieDomain</span></span>() &#123;</span><br><span class=\"line\">    var host = location.hostname;</span><br><span class=\"line\">    var ip = /^(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])$/;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ip.test(host) === <span class=\"literal\">true</span> || host === <span class=\"string\">&#x27;localhost&#x27;</span>) <span class=\"built_in\">return</span> host;</span><br><span class=\"line\">    var regex = /([^]*).*/;</span><br><span class=\"line\">    var match = host.match(regex);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (typeof match !== <span class=\"string\">&quot;undefined&quot;</span> &amp;&amp; null !== match) host = match[1];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (typeof host !== <span class=\"string\">&quot;undefined&quot;</span> &amp;&amp; null !== host) &#123;</span><br><span class=\"line\">        var strAry = host.split(<span class=\"string\">&quot;.&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (strAry.length &gt; 1) &#123;</span><br><span class=\"line\">            host = strAry[strAry.length - 2] + <span class=\"string\">&quot;.&quot;</span> + strAry[strAry.length - 1];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> <span class=\"string\">&#x27;.&#x27;</span> + host;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置cookie</span></span><br><span class=\"line\">document.cookie = cname + <span class=\"string\">&quot;=&quot;</span> + cvalue + <span class=\"string\">&quot;; expires=&quot;</span> + expires + <span class=\"string\">&quot;; domain=&quot;</span> + GetCookieDomain() + <span class=\"string\">&quot;; path=/&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#过期，当前时间减去一秒，立即过期</span></span><br><span class=\"line\">expires = (new Date().getTime() - 1000);</span><br><span class=\"line\">document.cookie = <span class=\"string\">&quot;agentId&quot;</span> + <span class=\"string\">&quot;=&quot;</span> + <span class=\"string\">&quot;123&quot;</span> + <span class=\"string\">&quot;; expires=&quot;</span> + (new Date().getTime() - 1000) + <span class=\"string\">&quot;; domain=&quot;</span> + GetCookieDomain() + <span class=\"string\">&quot;; path=/&quot;</span>;</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h2 id=\"初始化环境\"><a href=\"#初始化环境\" class=\"headerlink\" title=\"初始化环境\"></a>初始化环境</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g @angular/cli     <span class=\"comment\">#安装全局命令行</span></span><br><span class=\"line\">ng new ngapp                    <span class=\"comment\">#生成一个新项目</span></span><br><span class=\"line\">ng serve --open                 <span class=\"comment\">#启动服务器，热刷新</span></span><br><span class=\"line\">ng serve --proxy-config proxy.conf.json --host 0.0.0.0 --disable-host-check --port 4200 --live-reload-port 4201 <span class=\"comment\">#详细设置相关参数</span></span><br><span class=\"line\">ng serve --prod --<span class=\"built_in\">env</span>=dev --proxy-config proxy.conf.json --host 0.0.0.0 --disable-host-check</span><br><span class=\"line\"><span class=\"comment\"># 这是生产构建</span></span><br><span class=\"line\">ng build --target=production --environment=prod</span><br><span class=\"line\">ng build --prod --<span class=\"built_in\">env</span>=prod</span><br><span class=\"line\">ng build --prod</span><br><span class=\"line\"><span class=\"comment\"># 这是开发构建</span></span><br><span class=\"line\">ng build --target=development --environment=dev</span><br><span class=\"line\">ng build --dev --e=dev</span><br><span class=\"line\">ng build --dev</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常用开发命令-组件、服务、路由\"><a href=\"#常用开发命令-组件、服务、路由\" class=\"headerlink\" title=\"常用开发命令-组件、服务、路由\"></a>常用开发命令-组件、服务、路由</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ng generate component heroes        <span class=\"comment\">#生成一个heroes组件，CLI 创建了一个新的文件夹 src/app/heroes/</span></span><br><span class=\"line\">ng generate component hero -it      <span class=\"comment\">#取消模板文件,创建内联模块</span></span><br><span class=\"line\">ng g c --inline-template=<span class=\"literal\">true</span> --inline-style=<span class=\"literal\">true</span> tab   <span class=\"comment\">#创建内联模块</span></span><br><span class=\"line\">ng generate service hero            <span class=\"comment\">#创建一个名叫 hero 的服务</span></span><br><span class=\"line\">ng generate service hero --module=app   <span class=\"comment\">#创建服务,并把服务注入App组件中</span></span><br><span class=\"line\">    <span class=\"comment\">#把提供商添加到根模块上，以便在任何地方都使用服务的同一个实例</span></span><br><span class=\"line\">ng generate module app-routing --flat --module=app <span class=\"comment\">#创建路由模块 </span></span><br><span class=\"line\">    <span class=\"comment\">#--flat 把这个文件放进了 src/app 中，而不是单独的目录中</span></span><br><span class=\"line\">    <span class=\"comment\">#--module=app 告诉 CLI 把它注册到 AppModule 的 imports 数组中</span></span><br><span class=\"line\">ng generate class hero              <span class=\"comment\">#创建一个类</span></span><br><span class=\"line\"><span class=\"comment\">#参考地址：https://github.com/angular/angular-cli/wiki/generate-component</span></span><br><span class=\"line\"><span class=\"comment\">#参考地址：https://www.npmjs.com/package/angular-cli-tools?activeTab=readme</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"页面常用指令\"><a href=\"#页面常用指令\" class=\"headerlink\" title=\"页面常用指令\"></a>页面常用指令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; hero.name | uppercase &#125;&#125;     <span class=\"comment\">#过滤器，转为大写，lowercase小写</span></span><br><span class=\"line\">&#123;&#123;nullHero?.name&#125;&#125;              <span class=\"comment\">#替换*ngIf检测空，a?.b?.c?.d</span></span><br><span class=\"line\">&#123;&#123;<span class=\"variable\">$any</span>(hero).marker&#125;&#125;           <span class=\"comment\">#&#123;&#123;$any(this).member&#125;&#125;,访问组件中未声明过的成员</span></span><br><span class=\"line\">(click)=<span class=\"string\">&quot;onSelect(hero)&quot;</span>        <span class=\"comment\">#事件绑定方式</span></span><br><span class=\"line\">&lt;a routerLink=<span class=\"string\">&quot;/heroes&quot;</span>&gt;H&lt;/a&gt;   <span class=\"comment\">#路由跳转方式</span></span><br><span class=\"line\">    </span><br><span class=\"line\">[(ngModel)]=<span class=\"string\">&quot;hero.name&quot;</span>         <span class=\"comment\">#input的数据双向绑定</span></span><br><span class=\"line\">    <span class=\"comment\">#这两个的简写[ngModel]=&quot;hero.name&quot; (ngModelChange)=&quot;setUppercaseName($event)&quot;</span></span><br><span class=\"line\">    <span class=\"comment\">#import &#123; FormsModule &#125; from &#x27;@angular/forms&#x27;;imports: [FormsModule]需要导入对应的包</span></span><br><span class=\"line\">[ngClass]=<span class=\"string\">&quot;currentClasses&quot;</span>      <span class=\"comment\">#绑定类样式 currentClasses = &#123;&#x27;special&#x27;:  this.isSpecial&#125;;</span></span><br><span class=\"line\">[class.special]=<span class=\"string\">&quot;isSpecial&quot;</span>     <span class=\"comment\">#单个样式开关</span></span><br><span class=\"line\">[ngStyle]=<span class=\"string\">&quot;currentStyles&quot;</span>       <span class=\"comment\">#绑定style对象&#123;&#x27;font-style&#x27;: this.canSave  ? &#x27;italic&#x27; : &#x27;normal&#x27;&#125;</span></span><br><span class=\"line\">[style.display]=<span class=\"string\">&quot;isSpecial ? &#x27;block&#x27; : &#x27;none&#x27;&quot;</span>  <span class=\"comment\">#简单样式</span></span><br><span class=\"line\">[style.visibility]=<span class=\"string\">&quot;isFirstVote?&#x27;visible&#x27;:&#x27;hidden&#x27;&quot;</span></span><br><span class=\"line\">[innerHTML]=<span class=\"string\">&quot;aa&quot;</span>                <span class=\"comment\">#插入HTML\t</span></span><br><span class=\"line\"></span><br><span class=\"line\">*ngFor=<span class=\"string\">&quot;let hero of heroes;let i = index&quot;</span>       <span class=\"comment\">#for循环语句</span></span><br><span class=\"line\">[ngSwitch]=<span class=\"string\">&quot;currentHero.emotion&quot;</span> --&gt; *ngSwitchCase=<span class=\"string\">&quot;&#x27;happy&#x27;&quot;</span> --&gt; *ngSwitchDefault</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#input事件</span></span><br><span class=\"line\">(focus)=<span class=\"string\">&quot;getMatchInfo()&quot;</span> <span class=\"comment\">#聚焦时执行 (blur)=&quot;getMatchInfo()&quot; 失焦时执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#组件内引入内容</span></span><br><span class=\"line\">&lt;ng-content <span class=\"keyword\">select</span>=<span class=\"string\">&quot;[ion-fixed],ion-fab&quot;</span>&gt;&lt;/ng-content&gt;</span><br><span class=\"line\"><span class=\"comment\">#空占位符</span></span><br><span class=\"line\">&lt;ng-container&gt;&lt;/ng-container&gt;</span><br><span class=\"line\"><span class=\"comment\">#模板语法,封装指令,[IF]等</span></span><br><span class=\"line\">&lt;ng-template&gt;&lt;/ng-template&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Angular常用TS\"><a href=\"#Angular常用TS\" class=\"headerlink\" title=\"Angular常用TS\"></a>Angular常用TS</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#import &#123;Input&#125; from &#x27;@angular/core&#x27;;</span></span><br><span class=\"line\">@Input() hero: Hero;            <span class=\"comment\">#父子组件通信方式，数据双向绑定,可放set方法上  @Input() set name(name: string)&#123;&#125;</span></span><br><span class=\"line\">@Output(<span class=\"string\">&#x27;myClick&#x27;</span>) clicks       <span class=\"comment\">#绑定通知事件，并起别名‘myClick’</span></span><br><span class=\"line\">@ViewChild(ChildenComponent) child: ChildenComponent;   <span class=\"comment\">#子组件实例引用</span></span><br><span class=\"line\">@ViewChild(<span class=\"string\">&quot;child&quot;</span>) child2;     <span class=\"comment\">#字符串,指向含有‘#child’的元素</span></span><br><span class=\"line\">@ViewChild(<span class=\"string\">&#x27;childB&#x27;</span>, &#123;<span class=\"built_in\">read</span>: ElementRef&#125;)    <span class=\"comment\">#匹配元素,html元素</span></span><br><span class=\"line\">@ViewChild(<span class=\"string\">&#x27;childB&#x27;</span>, &#123;<span class=\"built_in\">read</span>: ViewContainerRef&#125;)  <span class=\"comment\">#匹配元素,匹配视图容器</span></span><br><span class=\"line\">@ViewChild(<span class=\"string\">&quot;refresher&quot;</span>) divTop: ElementRef;     <span class=\"comment\">#获取html元素</span></span><br><span class=\"line\">&lt;input <span class=\"comment\">#phone placeholder=&quot;phone number&quot;&gt;       #模板引用变量,(click)=&quot;callPhone(phone.value)&quot; === ref-phone</span></span><br><span class=\"line\"><span class=\"comment\">#heroForm=&quot;ngForm&quot; --&gt; &lt;button type=&quot;submit&quot; [disabled]=&quot;!heroForm.form.valid&quot;&gt;Submit&lt;/button&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#滚动到指定锚点</span></span><br><span class=\"line\">@ViewChild(<span class=\"string\">&quot;top&quot;</span>,&#123;<span class=\"built_in\">read</span>: ElementRef&#125;) ticketEle;</span><br><span class=\"line\">this.top &amp;&amp; this.top.nativeElement.scrollIntoView (<span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"comment\">#滚动到选中的tab</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">scrollToSelect</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">let</span> selected = this.ticketEle.nativeElement.querySelector(<span class=\"string\">&quot;.select&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(selected) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">let</span> ofTop = selected.offsetTop;</span><br><span class=\"line\">      this.scroll.nativeElement.scrollTo(0,ofTop);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#克隆页面元素</span></span><br><span class=\"line\">elementRef.nativeElement.cloneNode(<span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"comment\">#移除元素</span></span><br><span class=\"line\">element.parentNode &amp;&amp; element.parentNode.removeChild(element);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#允许自定义元素，icon-content等icon-header</span></span><br><span class=\"line\">@NgModule(&#123; schemas: [CUSTOM_ELEMENTS_SCHEMA] &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#事件监听一</span></span><br><span class=\"line\">import &#123;Observable&#125; from <span class=\"string\">&quot;rxjs&quot;</span>;</span><br><span class=\"line\">Observable.fromEvent(this.ele.nativeElement, <span class=\"string\">&#x27;scroll&#x27;</span>).subscribe((event) =&gt; &#123;</span><br><span class=\"line\">  console.log(&#x27;scroll&#x27;,<span class=\"number\">32</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">#事件监听二</span><br><span class=\"line\">import &#123;Renderer2&#125; from &quot;@angular/core&quot;;</span><br><span class=\"line\">this.renderer.listen(this.ele.nativeElement, &#x27;click&#x27;, () =&gt; &#123;</span><br><span class=\"line\">  console.log(&#x27;click&#x27;,<span class=\"number\">27</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">//js阻止事件冒泡</span><br><span class=\"line\">oEvent.cancelBubble = true;</span><br><span class=\"line\">oEvent.stopPropagation();</span><br><span class=\"line\"></span><br><span class=\"line\">//js阻止链接默认行为，没有停止冒泡</span><br><span class=\"line\">oEvent.preventDefault(); </span><br><span class=\"line\"></span><br><span class=\"line\">#检测数据变化</span><br><span class=\"line\">import &#123;ChangeDetectorRef&#125; from &#x27;@angular/core&#x27;;</span><br><span class=\"line\">public cdf: ChangeDetectorRef</span><br><span class=\"line\">this.cdf.detectChanges();</span><br><span class=\"line\"></span><br><span class=\"line\">#angular6补充</span><br><span class=\"line\">ng g pipe service/date --module ../router/bootstrap #以服务所在目录为根目录确定模块</span><br><span class=\"line\">ng g service service/http       #新建服务，可用模块名替代root</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ES6常用语法\"><a href=\"#ES6常用语法\" class=\"headerlink\" title=\"ES6常用语法\"></a>ES6常用语法</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">heroes =&gt; this.heroes = heroes  <span class=\"comment\">#只有一个返回语句的函数</span></span><br><span class=\"line\">&#123; name &#125; as Hero                <span class=\"comment\">#把Name的值赋给Hero对象的Name属性</span></span><br><span class=\"line\">&#123;bbc&#125;                           <span class=\"comment\">#把bbc变量变成键值对bbc-value对象\t</span></span><br><span class=\"line\">arrs.find(item =&gt; item === 1)   <span class=\"comment\">#数组查找指定条件的值</span></span><br><span class=\"line\">heroes.filter(h =&gt; h !== hero)  <span class=\"comment\">#过滤数组，true时过滤掉,类似删除</span></span><br><span class=\"line\">oldArray.map(entry =&gt; &#123;<span class=\"string\">&#x27;abc:&#x27;</span> + entry;&#125;)    <span class=\"comment\">#生成新的数组，可把数组转对象等</span></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 排序，<span class=\"literal\">false</span>:倒序,默认从大到小</span><br><span class=\"line\"> * @param &#123;string&#125; prop,&#123;boolean&#125; sc asc/desc</span><br><span class=\"line\"> * @returns &#123;any&#125;</span><br><span class=\"line\"> * this.sortArray(<span class=\"string\">&#x27;d30WinRatio&#x27;</span>,<span class=\"literal\">false</span>);</span><br><span class=\"line\"> */</span><br><span class=\"line\">sortArray(prop: string,sc:boolean=<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    const sorted = this.list.sort((a, b) =&gt; a[prop] &gt; b[prop] ? <span class=\"number\">1</span> : a[prop] === b[prop] ? <span class=\"number\">0</span> : -<span class=\"number\">1</span>);</span><br><span class=\"line\">    if(!sc) sorted.reverse();</span><br><span class=\"line\">    return sorted;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#对象转数组--&#123;a:<span class=\"number\">1</span>,b:<span class=\"number\">2</span>,c:<span class=\"number\">3</span>&#125;---&gt;[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">let arr = Object.keys(this.typeData).map(key=&gt; this.typeData[key]);</span><br><span class=\"line\"></span><br><span class=\"line\">#对象拷贝增量赋值</span><br><span class=\"line\">class C&#123;</span><br><span class=\"line\">    a;</span><br><span class=\"line\">    b;</span><br><span class=\"line\">    getA()&#123;return this.a&#125;</span><br><span class=\"line\">    getB()&#123;return this.b&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">let tmp = new C();</span><br><span class=\"line\">let obj = &#123;a:<span class=\"number\">6</span>,b:<span class=\"number\">7</span>&#125;;</span><br><span class=\"line\">var res = Object.assign(tmp,obj,&#123;c:<span class=\"number\">8</span>&#125;);//&#123;a:<span class=\"number\">6</span>,b:<span class=\"number\">7</span>,c:<span class=\"number\">8</span>&#125;; res === tmp;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"打包和优化\"><a href=\"#打包和优化\" class=\"headerlink\" title=\"打包和优化\"></a>打包和优化</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ng build --prod --bh ./         <span class=\"comment\">#指定base href的值编译</span></span><br><span class=\"line\">ng build –prod –aot             <span class=\"comment\">#不压缩编译，生成map文件</span></span><br><span class=\"line\">ng build --prod --stats-json    <span class=\"comment\">#输出包体组成分析文件，生成 stats.json</span></span><br><span class=\"line\">ng build --prod --build-optimizer   <span class=\"comment\">#配合 UglifyJs 能够智能的移除未使用代码</span></span><br><span class=\"line\">ng eject                        <span class=\"comment\">#导出Webpack配置,.angular-cli.json添加&quot;ejected&quot;: true</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Angular的Rest风格部署\"><a href=\"#Angular的Rest风格部署\" class=\"headerlink\" title=\"Angular的Rest风格部署\"></a>Angular的Rest风格部署</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#静态网站，配置Nginx</span></span><br><span class=\"line\">location / &#123;</span><br><span class=\"line\">    root   html/dist;</span><br><span class=\"line\">    try_files <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ /index.html =404; <span class=\"comment\">#主要是这句</span></span><br><span class=\"line\">    index  index.html index.htm;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#动态网站</span></span><br><span class=\"line\">app.use(<span class=\"keyword\">function</span> (req, res) &#123;</span><br><span class=\"line\">    console.log(req.path);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(req.path.indexOf(<span class=\"string\">&#x27;/api&#x27;</span>)&gt;=0)&#123;</span><br><span class=\"line\">        res.send(<span class=\"string\">&quot;server text&quot;</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123; //angular启动页</span><br><span class=\"line\">        res.sendfile(<span class=\"string\">&#x27;app/index.html&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常用开发技巧\"><a href=\"#常用开发技巧\" class=\"headerlink\" title=\"常用开发技巧\"></a>常用开发技巧</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#命令行扩展工具</span></span><br><span class=\"line\">npm install angular-cli-tools -g    <span class=\"comment\">#命令行扩展工具</span></span><br><span class=\"line\">ngt g class [class-name]            <span class=\"comment\">#创建类</span></span><br><span class=\"line\">ngt g c [component-name]            <span class=\"comment\">#创建组建</span></span><br><span class=\"line\">ngt g d [directive-name]            <span class=\"comment\">#创建指令</span></span><br><span class=\"line\">ngt g e [enum-name]                 <span class=\"comment\">#创建枚举</span></span><br><span class=\"line\">ngt g h [name]                      <span class=\"comment\">#创建html</span></span><br><span class=\"line\">ngt g index                         <span class=\"comment\">#创建索引\t\t</span></span><br><span class=\"line\">ngt g i [interface-name]            <span class=\"comment\">#创建接口</span></span><br><span class=\"line\">ngt g m [module-name]               <span class=\"comment\">#创建模块</span></span><br><span class=\"line\">ngt g p [pipe-name]                 <span class=\"comment\">#创建管道</span></span><br><span class=\"line\">ngt g r [route-name]                <span class=\"comment\">#创建动态路由</span></span><br><span class=\"line\">ngt g routing [routing-name]        <span class=\"comment\">#创建静态路由</span></span><br><span class=\"line\">ngt g s [service-name]e]            <span class=\"comment\">#创建服务</span></span><br><span class=\"line\">ngt g style [style-name]            <span class=\"comment\">#创建样式</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#添加延迟加载路由</span></span><br><span class=\"line\">import &#123; NgModule &#125;  from <span class=\"string\">&#x27;@angular/core&#x27;</span>;</span><br><span class=\"line\">import &#123; Routes, RouterModule &#125; from <span class=\"string\">&#x27;@angular/router&#x27;</span>;</span><br><span class=\"line\">import &#123; ActivityComponent &#125; from <span class=\"string\">&#x27;./activity.component&#x27;</span>;</span><br><span class=\"line\">const routes: Routes = [</span><br><span class=\"line\">  &#123; path: <span class=\"string\">&#x27;&#x27;</span>, component: ActivityComponent &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\">@NgModule(&#123;</span><br><span class=\"line\">  imports: [ RouterModule.forChild(routes)],</span><br><span class=\"line\">  exports: [ RouterModule ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">export</span> class ActivityRouting&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\">&#123;path: <span class=\"string\">&#x27;activity&#x27;</span>, loadChildren: <span class=\"string\">&#x27;./activity/activity.module#ActivityModule&#x27;</span>&#125;,</span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#常用示列</span></span><br><span class=\"line\">ngt update index --recursive    <span class=\"comment\">#更新当前目录和子目录的index索引</span></span><br><span class=\"line\"><span class=\"comment\">#模版文件安装配置</span></span><br><span class=\"line\">ngt install config              <span class=\"comment\">#在项目跟路径创建配置文件</span></span><br><span class=\"line\">ngt s ./login-form.module.ts -t:form-module <span class=\"comment\">#使用指定文件创建form模版</span></span><br><span class=\"line\">ngt g m <span class=\"built_in\">test</span> -t:form-module     <span class=\"comment\">#使用刚刚创建的模版去创建test模块</span></span><br><span class=\"line\"><span class=\"comment\">#ng更新后的命令，可以在当前目录创建对应的模块</span></span><br><span class=\"line\">ng update @angular/cli</span><br><span class=\"line\">ng g c --inline-template=<span class=\"literal\">true</span> --inline-style=<span class=\"literal\">true</span> tab   <span class=\"comment\">#创建内联tab模块</span></span><br><span class=\"line\">ng g c tab -its \t\t<span class=\"comment\">#上面命令简写</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#路由参数获取</span></span><br><span class=\"line\"><span class=\"comment\">#route:ActivatedRoute 获取路由参数</span></span><br><span class=\"line\">route.snapshot.params[<span class=\"string\">&#x27;roomStatus&#x27;</span>]</span><br><span class=\"line\">route.queryParams[<span class=\"string\">&#x27;roomStatus&#x27;</span>]</span><br><span class=\"line\">this.router.navigate([<span class=\"string\">&#x27;/activity/puzzles/ranking&#x27;</span>, &#123;uid: 123, tid: res.model.id&#125;])</span><br><span class=\"line\">routerLink=<span class=\"string\">&quot;/activity/puzzles&quot;</span></span><br><span class=\"line\">this.router.navigate([<span class=\"string\">&#x27;/login&#x27;</span>],&#123; skipLocationChange: <span class=\"literal\">true</span> &#125;);\t<span class=\"comment\">#防止重复跳登陆页面，url不变</span></span><br><span class=\"line\">this.router.navigate([<span class=\"string\">&#x27;./ranking&#x27;</span>],&#123;replaceUrl:<span class=\"literal\">true</span>,relativeTo:this.currentRoute&#125;);//Url改变,不添加到历史记录</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#监听当前页面路由变化，可以监听到历史回退</span></span><br><span class=\"line\">import &#123;debounceTime, filter, map, mergeMap&#125; from <span class=\"string\">&quot;rxjs/operators&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">#第一次加载不会触发--可放入init里面</span></span><br><span class=\"line\">this.subRouter = this.router.events</span><br><span class=\"line\">  .pipe(filter(event =&gt; event instanceof NavigationEnd),map(() =&gt; this.route))</span><br><span class=\"line\">  .pipe(map(route =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (route.firstChild) route = route.firstChild;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> route;</span><br><span class=\"line\">  &#125;))</span><br><span class=\"line\">  .pipe(filter(route =&gt; route.outlet === <span class=\"string\">&#x27;primary&#x27;</span>))</span><br><span class=\"line\">  .pipe(mergeMap(route =&gt; route.params),debounceTime(300))</span><br><span class=\"line\">  .subscribe((event) =&gt;&#123;</span><br><span class=\"line\">    if(Number(event.uid) &amp;&amp; Number(event.type))&#123;</span><br><span class=\"line\">      this.uid = +event.uid;</span><br><span class=\"line\">      this.type = +event.type;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#同路由页面替换URL参数，第一个不添加到历史记录，第二个会产生历史记录</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!!(window.history &amp;&amp; history.pushState))&#123;</span><br><span class=\"line\">  history.replaceState(&#123;uid: this.uid, <span class=\"built_in\">type</span>: this.type&#125;, <span class=\"string\">&#x27;活动排名页&#x27;</span>, `#/activity/puzzles/ranking;uid=<span class=\"variable\">$&#123;this.uid&#125;</span>;<span class=\"built_in\">type</span>=<span class=\"variable\">$&#123;this.type&#125;</span>`);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">  //this.router.navigate([<span class=\"string\">&#x27;/activity/puzzles/ranking&#x27;</span>, &#123;uid: this.uid, <span class=\"built_in\">type</span>: this.type&#125;]);</span><br><span class=\"line\">  this.router.navigate([<span class=\"string\">&#x27;./ranking&#x27;</span>],&#123;replaceUrl:<span class=\"literal\">true</span>,relativeTo:this.currentRoute&#125;);//不添加到历史记录</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//rxjs防抖动函数</span><br><span class=\"line\">import &#123;Subject&#125; from <span class=\"string\">&quot;rxjs/Subject&quot;</span>;</span><br><span class=\"line\">import &#123;debounceTime, distinctUntilChanged&#125; from <span class=\"string\">&#x27;rxjs/operators&#x27;</span>;</span><br><span class=\"line\">changeStream: Subject&lt;string&gt; = new Subject&lt;string&gt;();</span><br><span class=\"line\">this.order = this.order ||</span><br><span class=\"line\">      this.changeStream</span><br><span class=\"line\">          .pipe(debounceTime(2000))</span><br><span class=\"line\">          .pipe(distinctUntilChanged())</span><br><span class=\"line\">          .subscribe(streetText =&gt; &#123;</span><br><span class=\"line\">              //实际业务处理</span><br><span class=\"line\">              console.log(38);</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"><span class=\"comment\">#调用方式</span></span><br><span class=\"line\">this.changeStream.next(this.list);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常用指令写法\"><a href=\"#常用指令写法\" class=\"headerlink\" title=\"常用指令写法\"></a>常用指令写法</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#时间格式化</span></span><br><span class=\"line\">import &#123; DatePipe &#125; from <span class=\"string\">&#x27;@angular/common&#x27;</span>;</span><br><span class=\"line\">private datePipe: DatePipe</span><br><span class=\"line\">this.datePipe.transform(this.ticketInfo.flyTime, <span class=\"string\">&#x27;yyyy-MM-dd HH:mm&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#ng-container：特别对for循环和if同时使用时，特别有效</span></span><br><span class=\"line\">既不是一个Component，也不是一个Directive，只是单纯的一个特殊tag。ng-container可以直接包裹任何元素，包括文本，但本身不会生成元素标签，也不会影响页面样式和布局。包裹的内容，如果不通过其他指令控制，会直接渲染到页面中</span><br><span class=\"line\"></span><br><span class=\"line\">https://map.baidu.com/?qt=cur&amp;wd=%E6%B7%B1%E5%9C%B3%E5%B8%82  //天气预报接口</span><br><span class=\"line\">https://map.baidu.com/mobile/?qt=loc&amp;x=113.9278992&amp;y=22.543741&amp;pois=1 //地理信息接口</span><br></pre></td></tr></table></figure>\n<h2 id=\"IphoneX的样式兼容\"><a href=\"#IphoneX的样式兼容\" class=\"headerlink\" title=\"IphoneX的样式兼容\"></a>IphoneX的样式兼容</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@media only screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) &#123;</span><br><span class=\"line\">    \t.iphoneTop .indexTop,</span><br><span class=\"line\">\t    .iphoneTop .liveTop,</span><br><span class=\"line\">\t    .iphoneTop .navBar&#123; padding-top: 44px;&#125;</span><br><span class=\"line\">\t    .betBottomBar,.messageFixed&#123; bottom: 34px;&#125;</span><br><span class=\"line\">\t    .iphoneTop .fixed_top_bar .title&#123; margin-top: 44px;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#背景图平铺</span></span><br><span class=\"line\">.content-bg&#123;background: url(../images/bg_repeat.jpg) repeat-y;background-size: 100% auto;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#浏览器自带滚动条隐藏</span></span><br><span class=\"line\">html::-webkit-scrollBar&#123;display:none;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#解决输入框自动补全，黄色背景</span></span><br><span class=\"line\">input:-webkit-autofill,</span><br><span class=\"line\">input:-webkit-autofill:hover,</span><br><span class=\"line\">input:-webkit-autofill:focus,</span><br><span class=\"line\">input:-webkit-autofill:active &#123;</span><br><span class=\"line\">    -webkit-box-shadow: 0 0 0px 1000px <span class=\"comment\">#333 inset;</span></span><br><span class=\"line\">    transition: background-color 50000s ease-in-out 0s, color 5000s ease-in-out 0s;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#这种可以解决回退后，显示黄色的背景，完美解决</span></span><br><span class=\"line\">input:-webkit-autofill &#123;</span><br><span class=\"line\">   -webkit-animation: autofill-fix 1s infinite;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@-webkit-keyframes autofill-fix &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        background-color: transparent</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        background-color: transparent</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#加上spinner类能让p和div等块旋转</span></span><br><span class=\"line\">.spinner&#123;</span><br><span class=\"line\">    -webkit-animation: spin 1s linear 1s 5 alternate;</span><br><span class=\"line\">    animation: spin 1s linear infinite;</span><br><span class=\"line\">    display: inline-block;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@-webkit-keyframes spin &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        -webkit-transform: rotate(0deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        -webkit-transform: rotate(360deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@keyframes spin &#123;</span><br><span class=\"line\">    from &#123;</span><br><span class=\"line\">        transform: rotate(0deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    to &#123;</span><br><span class=\"line\">        transform: rotate(360deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#rem单位初始化--Ts</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> var window:any;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">initWinPage</span></span>()&#123;</span><br><span class=\"line\">    this.restWinPage(window, window.lib || (window.lib = &#123;&#125;));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">private restWinPage(N, M) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">L</span></span>() &#123;</span><br><span class=\"line\">        <span class=\"built_in\">let</span> a = I.getBoundingClientRect().width;</span><br><span class=\"line\">        a / F &gt; 540 &amp;&amp; (a = 540 * F);</span><br><span class=\"line\">        <span class=\"built_in\">let</span> d = a / 7.5;</span><br><span class=\"line\">        I.style.fontSize = d + <span class=\"string\">&quot;px&quot;</span>, D.rem = N.rem = d</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">let</span> K, J = N.document, I = J.documentElement, H = J.querySelector(<span class=\"string\">&#x27;meta[name=&quot;viewport&quot;]&#x27;</span>),</span><br><span class=\"line\">        G = J.querySelector(<span class=\"string\">&#x27;meta[name=&quot;flexible&quot;]&#x27;</span>), F = 0, E = 0, D = M.flexible || (M.flexible = &#123;&#125;);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (H) &#123;</span><br><span class=\"line\">        // console.warn(<span class=\"string\">&quot;将根据已有的meta标签来设置缩放比例&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">let</span> C = H.getAttribute(<span class=\"string\">&quot;content&quot;</span>).match(/initial\\-scale=([\\d\\.]+)/);</span><br><span class=\"line\">        C &amp;&amp; (E = parseFloat(C[1]), F = parseInt(<span class=\"string\">&#x27;&#x27;</span>+1 / E))</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (G) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">let</span> B = G.getAttribute(<span class=\"string\">&quot;content&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (B) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">let</span> A = B.match(/initial\\-dpr=([\\d\\.]+)/), z = B.match(/maximum\\-dpr=([\\d\\.]+)/);</span><br><span class=\"line\">                A &amp;&amp; (F = parseFloat(A[1]), E = parseFloat((<span class=\"number\">1</span> / F).toFixed(<span class=\"number\">2</span>))), z &amp;&amp; (F = parseFloat(z[1]), E = parseFloat((<span class=\"number\">1</span> / F).toFixed(<span class=\"number\">2</span>)))</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!F &amp;&amp; !E) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">let</span> y = N.navigator.userAgent, x = (!!y.match(/android/gi) &amp;&amp; !!y.match(/iphone/gi)),</span><br><span class=\"line\">            w = x &amp;&amp; !!y.match(/OS 9_3/), v = N.devicePixelRatio;</span><br><span class=\"line\">        F = x ? v &gt;= 3 &amp;&amp; (!F || F &gt;= 3) ? 3 : v &gt;= 2 &amp;&amp; (!F || F &gt;= 2) ? 2 : 1 : 1, E = 1 / F</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (I.setAttribute(<span class=\"string\">&quot;data-dpr&quot;</span>, F), !H) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (H = J.createElement(<span class=\"string\">&quot;meta&quot;</span>), H.setAttribute(<span class=\"string\">&quot;name&quot;</span>, <span class=\"string\">&quot;viewport&quot;</span>), H.setAttribute(<span class=\"string\">&quot;content&quot;</span>, <span class=\"string\">&quot;initial-scale=&quot;</span> + E + <span class=\"string\">&quot;, maximum-scale=&quot;</span> + E + <span class=\"string\">&quot;, minimum-scale=&quot;</span> + E + <span class=\"string\">&quot;, user-scalable=no&quot;</span>), I.firstElementChild) &#123;</span><br><span class=\"line\">            I.firstElementChild.appendChild(H)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">let</span> u = J.createElement(<span class=\"string\">&quot;div&quot;</span>);</span><br><span class=\"line\">            u.appendChild(H), J.write(u.innerHTML)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    N.addEventListener(<span class=\"string\">&quot;resize&quot;</span>, <span class=\"function\"><span class=\"title\">function</span></span> () &#123;</span><br><span class=\"line\">        clearTimeout(K), K = setTimeout(L, 300)</span><br><span class=\"line\">    &#125;, !1), N.addEventListener(<span class=\"string\">&quot;pageshow&quot;</span>, <span class=\"keyword\">function</span> (b) &#123;</span><br><span class=\"line\">        b.persisted &amp;&amp; (clearTimeout(K), K = setTimeout(L, 300))</span><br><span class=\"line\">    &#125;, !1), <span class=\"string\">&quot;complete&quot;</span> === J.readyState ? J.body.style.fontSize = 12 * F + <span class=\"string\">&quot;px&quot;</span> : J.addEventListener(<span class=\"string\">&quot;DOMContentLoaded&quot;</span>, <span class=\"function\"><span class=\"title\">function</span></span> () &#123;</span><br><span class=\"line\">        J.body.style.fontSize = 12 * F + <span class=\"string\">&quot;px&quot;</span></span><br><span class=\"line\">    &#125;, !1), L(), D.dpr = N.dpr = F, D.refreshRem = L, D.rem2px = <span class=\"keyword\">function</span> (d) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">let</span> c:any = parseFloat(d) * this.rem;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> <span class=\"string\">&quot;string&quot;</span> == typeof d &amp;&amp; d.match(/rem$/) &amp;&amp; (c += <span class=\"string\">&quot;px&quot;</span>), c</span><br><span class=\"line\">    &#125;, D.px2rem = <span class=\"keyword\">function</span> (d) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">let</span> c:any = parseFloat(d) / this.rem;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> <span class=\"string\">&quot;string&quot;</span> == typeof d &amp;&amp; d.match(/px$/) &amp;&amp; (c += <span class=\"string\">&quot;rem&quot;</span>), c</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#iframe缩放问题</span></span><br><span class=\"line\">-webkit-transform: scaleY(0.7);//Y轴方向，缩放0.6倍</span><br><span class=\"line\">-webkit-transform-origin: 100% 100%;//缩放在右下角对齐</span><br><span class=\"line\">margin-top: -50px;//负值margin从而把其位置摆正确，有时需要放到包在div的外面</span><br><span class=\"line\">margin-left: -95px;//如果用scale全部缩放，需要设置这个值</span><br><span class=\"line\"><span class=\"comment\">#缩放示例</span></span><br><span class=\"line\">[style.marginTop.px]=<span class=\"string\">&quot;cartoonHeight*0.2*-1&quot;</span></span><br><span class=\"line\">[style.marginLeft.px]=<span class=\"string\">&quot;cartoonWidth*0.2*-1&quot;</span></span><br><span class=\"line\">style=<span class=\"string\">&quot;transform: scale(0.8);-webkit-transform: scale(0.8);-webkit-transform-origin: 100% 100%;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SASS常用技巧\"><a href=\"#SASS常用技巧\" class=\"headerlink\" title=\"SASS常用技巧\"></a>SASS常用技巧</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node-sass scss/app.scss css/app.css --output-style compressed\t<span class=\"comment\">#编译并压缩代码，-w监听</span></span><br><span class=\"line\">node-sass -w -r scss -o css --output-style compressed \t\t\t<span class=\"comment\">#监听scss目录，编译到css目录</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"cookie相关设置\"><a href=\"#cookie相关设置\" class=\"headerlink\" title=\"cookie相关设置\"></a>cookie相关设置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#获取根域名，以便设置到根域名上，如 .baidu.com .google.com</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">GetCookieDomain</span></span>() &#123;</span><br><span class=\"line\">    var host = location.hostname;</span><br><span class=\"line\">    var ip = /^(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])$/;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ip.test(host) === <span class=\"literal\">true</span> || host === <span class=\"string\">&#x27;localhost&#x27;</span>) <span class=\"built_in\">return</span> host;</span><br><span class=\"line\">    var regex = /([^]*).*/;</span><br><span class=\"line\">    var match = host.match(regex);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (typeof match !== <span class=\"string\">&quot;undefined&quot;</span> &amp;&amp; null !== match) host = match[1];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (typeof host !== <span class=\"string\">&quot;undefined&quot;</span> &amp;&amp; null !== host) &#123;</span><br><span class=\"line\">        var strAry = host.split(<span class=\"string\">&quot;.&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (strAry.length &gt; 1) &#123;</span><br><span class=\"line\">            host = strAry[strAry.length - 2] + <span class=\"string\">&quot;.&quot;</span> + strAry[strAry.length - 1];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> <span class=\"string\">&#x27;.&#x27;</span> + host;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置cookie</span></span><br><span class=\"line\">document.cookie = cname + <span class=\"string\">&quot;=&quot;</span> + cvalue + <span class=\"string\">&quot;; expires=&quot;</span> + expires + <span class=\"string\">&quot;; domain=&quot;</span> + GetCookieDomain() + <span class=\"string\">&quot;; path=/&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#过期，当前时间减去一秒，立即过期</span></span><br><span class=\"line\">expires = (new Date().getTime() - 1000);</span><br><span class=\"line\">document.cookie = <span class=\"string\">&quot;agentId&quot;</span> + <span class=\"string\">&quot;=&quot;</span> + <span class=\"string\">&quot;123&quot;</span> + <span class=\"string\">&quot;; expires=&quot;</span> + (new Date().getTime() - 1000) + <span class=\"string\">&quot;; domain=&quot;</span> + GetCookieDomain() + <span class=\"string\">&quot;; path=/&quot;</span>;</span><br></pre></td></tr></table></figure>"},{"title":"轻量级股票数据中台","copyright":false,"date":"2024-12-03T14:51:00.000Z","_content":"## 轻量级股票数据中台\n简单易用的数据中台，服务于韭皇的可自控应用，方便二次开发；无复杂数据库依赖，启动即可得，追求至简，方便韭皇部署；外部接口可扩展，与核心功能隔离，可快速切换服务\n\n## 使用场景\n搭建自己的选股平台，分析数据私有化保存，二次开发私有化指标，自定义选股策略\n\n## 设计理念\n为了方便快速开发，尽可能减少相关依赖，简化开发流程，主要服务于个人，不考虑分布式，集群化部署，相当于个人的数据中台；\n接口和页面多集中在一个项目里面，启动即可调试开发，方便再次开发；外部接口剥离，方便不同平台接口兼容，而不改变现有功能。\n\n## 已有功能\n* 股票搜索，详情页，第三方K线图\n* 指标筛选(三连阳，财务，RSI/KDJ/WR/MACD等)\n* 收藏，分析股票，添加分析结果，添加备注信息\n* 用户登陆，添加子账户，管理子账户的相关信息\n* 外部服务可配置，自定义相关参数，启停相关服务\n\n## 安装方式\n* [去下载该系统,点\"克隆/下载\"，再点\"下载ZIP\"](https://gitee.com/doobo/stock-analysis)\n* [下载解压软件，解压下载的系统，解压密码:123456](https://sfdl.360safe.com/netunion/20140425/360zip_yqlm_168097.exe)\n* [安装系统执行所需的SDK环境，搜索\"JDK 8\",下载安装](https://sfdl.360safe.com/netunion/20140425/360safejisu+168097+n2a27c3f091.exe)\n* 启动系统(安装一次后，以后只需启动即可，无需重复安装）\n* 在浏览器(支持ES6)上进入系统[,如无ES6浏览器，可点击下载ES6浏览器安装](https://sfdl.360safe.com/netunion/20140425/360cse+168097+n2a27c3f091.exe)\n![JDK 8环境下载](https://s2.loli.net/2024/12/02/O2PGU7V9FHgrkw6.png)\n## 相关界面图\n![首页看板](https://s2.loli.net/2024/12/02/UjGHl8BP5rALZOS.png)\n![股票详情页](https://s2.loli.net/2024/12/02/93bFSxKQslpetYD.png)\n![分析策略列表](https://s2.loli.net/2024/12/02/IPNDahZYdEysJz9.png)","source":"_posts/stock-analysis.md","raw":"---\ntitle: 轻量级股票数据中台\ncopyright: false\ndate: 2024-12-03 22:51:00\ntags: \n - stock\ncategories: \n - 股票\n---\n## 轻量级股票数据中台\n简单易用的数据中台，服务于韭皇的可自控应用，方便二次开发；无复杂数据库依赖，启动即可得，追求至简，方便韭皇部署；外部接口可扩展，与核心功能隔离，可快速切换服务\n\n## 使用场景\n搭建自己的选股平台，分析数据私有化保存，二次开发私有化指标，自定义选股策略\n\n## 设计理念\n为了方便快速开发，尽可能减少相关依赖，简化开发流程，主要服务于个人，不考虑分布式，集群化部署，相当于个人的数据中台；\n接口和页面多集中在一个项目里面，启动即可调试开发，方便再次开发；外部接口剥离，方便不同平台接口兼容，而不改变现有功能。\n\n## 已有功能\n* 股票搜索，详情页，第三方K线图\n* 指标筛选(三连阳，财务，RSI/KDJ/WR/MACD等)\n* 收藏，分析股票，添加分析结果，添加备注信息\n* 用户登陆，添加子账户，管理子账户的相关信息\n* 外部服务可配置，自定义相关参数，启停相关服务\n\n## 安装方式\n* [去下载该系统,点\"克隆/下载\"，再点\"下载ZIP\"](https://gitee.com/doobo/stock-analysis)\n* [下载解压软件，解压下载的系统，解压密码:123456](https://sfdl.360safe.com/netunion/20140425/360zip_yqlm_168097.exe)\n* [安装系统执行所需的SDK环境，搜索\"JDK 8\",下载安装](https://sfdl.360safe.com/netunion/20140425/360safejisu+168097+n2a27c3f091.exe)\n* 启动系统(安装一次后，以后只需启动即可，无需重复安装）\n* 在浏览器(支持ES6)上进入系统[,如无ES6浏览器，可点击下载ES6浏览器安装](https://sfdl.360safe.com/netunion/20140425/360cse+168097+n2a27c3f091.exe)\n![JDK 8环境下载](https://s2.loli.net/2024/12/02/O2PGU7V9FHgrkw6.png)\n## 相关界面图\n![首页看板](https://s2.loli.net/2024/12/02/UjGHl8BP5rALZOS.png)\n![股票详情页](https://s2.loli.net/2024/12/02/93bFSxKQslpetYD.png)\n![分析策略列表](https://s2.loli.net/2024/12/02/IPNDahZYdEysJz9.png)","slug":"stock-analysis","published":1,"updated":"2024-12-06T03:08:18.000Z","_id":"cm77mfkgg000fno5f9iawfbhc","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"轻量级股票数据中台\"><a href=\"#轻量级股票数据中台\" class=\"headerlink\" title=\"轻量级股票数据中台\"></a>轻量级股票数据中台</h2><p>简单易用的数据中台，服务于韭皇的可自控应用，方便二次开发；无复杂数据库依赖，启动即可得，追求至简，方便韭皇部署；外部接口可扩展，与核心功能隔离，可快速切换服务</p>\n<h2 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h2><p>搭建自己的选股平台，分析数据私有化保存，二次开发私有化指标，自定义选股策略</p>\n<h2 id=\"设计理念\"><a href=\"#设计理念\" class=\"headerlink\" title=\"设计理念\"></a>设计理念</h2><p>为了方便快速开发，尽可能减少相关依赖，简化开发流程，主要服务于个人，不考虑分布式，集群化部署，相当于个人的数据中台；<br>接口和页面多集中在一个项目里面，启动即可调试开发，方便再次开发；外部接口剥离，方便不同平台接口兼容，而不改变现有功能。</p>\n<h2 id=\"已有功能\"><a href=\"#已有功能\" class=\"headerlink\" title=\"已有功能\"></a>已有功能</h2><ul>\n<li>股票搜索，详情页，第三方K线图</li>\n<li>指标筛选(三连阳，财务，RSI&#x2F;KDJ&#x2F;WR&#x2F;MACD等)</li>\n<li>收藏，分析股票，添加分析结果，添加备注信息</li>\n<li>用户登陆，添加子账户，管理子账户的相关信息</li>\n<li>外部服务可配置，自定义相关参数，启停相关服务</li>\n</ul>\n<h2 id=\"安装方式\"><a href=\"#安装方式\" class=\"headerlink\" title=\"安装方式\"></a>安装方式</h2><ul>\n<li><a href=\"https://gitee.com/doobo/stock-analysis\">去下载该系统,点”克隆&#x2F;下载”，再点”下载ZIP”</a></li>\n<li><a href=\"https://sfdl.360safe.com/netunion/20140425/360zip_yqlm_168097.exe\">下载解压软件，解压下载的系统，解压密码:123456</a></li>\n<li><a href=\"https://sfdl.360safe.com/netunion/20140425/360safejisu+168097+n2a27c3f091.exe\">安装系统执行所需的SDK环境，搜索”JDK 8”,下载安装</a></li>\n<li>启动系统(安装一次后，以后只需启动即可，无需重复安装）</li>\n<li>在浏览器(支持ES6)上进入系统<a href=\"https://sfdl.360safe.com/netunion/20140425/360cse+168097+n2a27c3f091.exe\">,如无ES6浏览器，可点击下载ES6浏览器安装</a><br><img src=\"https://s2.loli.net/2024/12/02/O2PGU7V9FHgrkw6.png\" alt=\"JDK 8环境下载\"></li>\n</ul>\n<h2 id=\"相关界面图\"><a href=\"#相关界面图\" class=\"headerlink\" title=\"相关界面图\"></a>相关界面图</h2><p><img src=\"https://s2.loli.net/2024/12/02/UjGHl8BP5rALZOS.png\" alt=\"首页看板\"><br><img src=\"https://s2.loli.net/2024/12/02/93bFSxKQslpetYD.png\" alt=\"股票详情页\"><br><img src=\"https://s2.loli.net/2024/12/02/IPNDahZYdEysJz9.png\" alt=\"分析策略列表\"></p>\n","excerpt":"","more":"<h2 id=\"轻量级股票数据中台\"><a href=\"#轻量级股票数据中台\" class=\"headerlink\" title=\"轻量级股票数据中台\"></a>轻量级股票数据中台</h2><p>简单易用的数据中台，服务于韭皇的可自控应用，方便二次开发；无复杂数据库依赖，启动即可得，追求至简，方便韭皇部署；外部接口可扩展，与核心功能隔离，可快速切换服务</p>\n<h2 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h2><p>搭建自己的选股平台，分析数据私有化保存，二次开发私有化指标，自定义选股策略</p>\n<h2 id=\"设计理念\"><a href=\"#设计理念\" class=\"headerlink\" title=\"设计理念\"></a>设计理念</h2><p>为了方便快速开发，尽可能减少相关依赖，简化开发流程，主要服务于个人，不考虑分布式，集群化部署，相当于个人的数据中台；<br>接口和页面多集中在一个项目里面，启动即可调试开发，方便再次开发；外部接口剥离，方便不同平台接口兼容，而不改变现有功能。</p>\n<h2 id=\"已有功能\"><a href=\"#已有功能\" class=\"headerlink\" title=\"已有功能\"></a>已有功能</h2><ul>\n<li>股票搜索，详情页，第三方K线图</li>\n<li>指标筛选(三连阳，财务，RSI&#x2F;KDJ&#x2F;WR&#x2F;MACD等)</li>\n<li>收藏，分析股票，添加分析结果，添加备注信息</li>\n<li>用户登陆，添加子账户，管理子账户的相关信息</li>\n<li>外部服务可配置，自定义相关参数，启停相关服务</li>\n</ul>\n<h2 id=\"安装方式\"><a href=\"#安装方式\" class=\"headerlink\" title=\"安装方式\"></a>安装方式</h2><ul>\n<li><a href=\"https://gitee.com/doobo/stock-analysis\">去下载该系统,点”克隆&#x2F;下载”，再点”下载ZIP”</a></li>\n<li><a href=\"https://sfdl.360safe.com/netunion/20140425/360zip_yqlm_168097.exe\">下载解压软件，解压下载的系统，解压密码:123456</a></li>\n<li><a href=\"https://sfdl.360safe.com/netunion/20140425/360safejisu+168097+n2a27c3f091.exe\">安装系统执行所需的SDK环境，搜索”JDK 8”,下载安装</a></li>\n<li>启动系统(安装一次后，以后只需启动即可，无需重复安装）</li>\n<li>在浏览器(支持ES6)上进入系统<a href=\"https://sfdl.360safe.com/netunion/20140425/360cse+168097+n2a27c3f091.exe\">,如无ES6浏览器，可点击下载ES6浏览器安装</a><br><img src=\"https://s2.loli.net/2024/12/02/O2PGU7V9FHgrkw6.png\" alt=\"JDK 8环境下载\"></li>\n</ul>\n<h2 id=\"相关界面图\"><a href=\"#相关界面图\" class=\"headerlink\" title=\"相关界面图\"></a>相关界面图</h2><p><img src=\"https://s2.loli.net/2024/12/02/UjGHl8BP5rALZOS.png\" alt=\"首页看板\"><br><img src=\"https://s2.loli.net/2024/12/02/93bFSxKQslpetYD.png\" alt=\"股票详情页\"><br><img src=\"https://s2.loli.net/2024/12/02/IPNDahZYdEysJz9.png\" alt=\"分析策略列表\"></p>\n"},{"_content":"# 基于Hexo的静态网站模板\n\n#### 介绍\n基于Hexo的一套静态网页模版，可快速基于md文档生成静态网站，方便部署在github.io上\n\n#### 软件架构\n基于hexo，在nodeJs环境下运行，生成静态目录\n\n\n#### 安装教程\n* 安装NodeJs环境，并配置npm\n* 下载项目后，在目录里面安装相关依赖，“npm install”\n* 启动项目，“npm run start”，在浏览器上查看效果\n\n#### 使用说明\n* 可参考“github.sh”来快速部署到github.io上\n* 把md文档放到\"source/_posts\"目录下，即可生成相关的静态html文件\n* [项目效果展示地址](https://doobo.github.io/),https://doobo.github.io","source":"_posts/README copy.md","raw":"# 基于Hexo的静态网站模板\n\n#### 介绍\n基于Hexo的一套静态网页模版，可快速基于md文档生成静态网站，方便部署在github.io上\n\n#### 软件架构\n基于hexo，在nodeJs环境下运行，生成静态目录\n\n\n#### 安装教程\n* 安装NodeJs环境，并配置npm\n* 下载项目后，在目录里面安装相关依赖，“npm install”\n* 启动项目，“npm run start”，在浏览器上查看效果\n\n#### 使用说明\n* 可参考“github.sh”来快速部署到github.io上\n* 把md文档放到\"source/_posts\"目录下，即可生成相关的静态html文件\n* [项目效果展示地址](https://doobo.github.io/),https://doobo.github.io","slug":"README copy","published":1,"date":"2025-02-16T12:47:07.357Z","updated":"2024-12-06T03:08:18.000Z","_id":"cm77mfkgh000hno5f0xx436ao","title":"","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"基于Hexo的静态网站模板\"><a href=\"#基于Hexo的静态网站模板\" class=\"headerlink\" title=\"基于Hexo的静态网站模板\"></a>基于Hexo的静态网站模板</h1><h4 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h4><p>基于Hexo的一套静态网页模版，可快速基于md文档生成静态网站，方便部署在github.io上</p>\n<h4 id=\"软件架构\"><a href=\"#软件架构\" class=\"headerlink\" title=\"软件架构\"></a>软件架构</h4><p>基于hexo，在nodeJs环境下运行，生成静态目录</p>\n<h4 id=\"安装教程\"><a href=\"#安装教程\" class=\"headerlink\" title=\"安装教程\"></a>安装教程</h4><ul>\n<li>安装NodeJs环境，并配置npm</li>\n<li>下载项目后，在目录里面安装相关依赖，“npm install”</li>\n<li>启动项目，“npm run start”，在浏览器上查看效果</li>\n</ul>\n<h4 id=\"使用说明\"><a href=\"#使用说明\" class=\"headerlink\" title=\"使用说明\"></a>使用说明</h4><ul>\n<li>可参考“github.sh”来快速部署到github.io上</li>\n<li>把md文档放到”source&#x2F;_posts”目录下，即可生成相关的静态html文件</li>\n<li><a href=\"https://doobo.github.io/\">项目效果展示地址</a>,<a href=\"https://doobo.github.io/\">https://doobo.github.io</a></li>\n</ul>\n","excerpt":"","more":"<h1 id=\"基于Hexo的静态网站模板\"><a href=\"#基于Hexo的静态网站模板\" class=\"headerlink\" title=\"基于Hexo的静态网站模板\"></a>基于Hexo的静态网站模板</h1><h4 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h4><p>基于Hexo的一套静态网页模版，可快速基于md文档生成静态网站，方便部署在github.io上</p>\n<h4 id=\"软件架构\"><a href=\"#软件架构\" class=\"headerlink\" title=\"软件架构\"></a>软件架构</h4><p>基于hexo，在nodeJs环境下运行，生成静态目录</p>\n<h4 id=\"安装教程\"><a href=\"#安装教程\" class=\"headerlink\" title=\"安装教程\"></a>安装教程</h4><ul>\n<li>安装NodeJs环境，并配置npm</li>\n<li>下载项目后，在目录里面安装相关依赖，“npm install”</li>\n<li>启动项目，“npm run start”，在浏览器上查看效果</li>\n</ul>\n<h4 id=\"使用说明\"><a href=\"#使用说明\" class=\"headerlink\" title=\"使用说明\"></a>使用说明</h4><ul>\n<li>可参考“github.sh”来快速部署到github.io上</li>\n<li>把md文档放到”source&#x2F;_posts”目录下，即可生成相关的静态html文件</li>\n<li><a href=\"https://doobo.github.io/\">项目效果展示地址</a>,<a href=\"https://doobo.github.io/\">https://doobo.github.io</a></li>\n</ul>\n"},{"_content":"# 基于Hexo的静态网站模板\n\n#### 介绍\n基于Hexo的一套静态网页模版，可快速基于md文档生成静态网站，方便部署在github.io上\n\n#### 软件架构\n基于hexo，在nodeJs环境下运行，生成静态目录\n\n\n#### 安装教程\n* 安装NodeJs环境，并配置npm\n* 下载项目后，在目录里面安装相关依赖，“npm install”\n* 启动项目，“npm run start”，在浏览器上查看效果\n\n#### 使用说明\n* 可参考“github.sh”来快速部署到github.io上\n* 把md文档放到\"source/_posts\"目录下，即可生成相关的静态html文件\n* [项目效果展示地址](https://doobo.github.io/),https://doobo.github.io","source":"_posts/README.md","raw":"# 基于Hexo的静态网站模板\n\n#### 介绍\n基于Hexo的一套静态网页模版，可快速基于md文档生成静态网站，方便部署在github.io上\n\n#### 软件架构\n基于hexo，在nodeJs环境下运行，生成静态目录\n\n\n#### 安装教程\n* 安装NodeJs环境，并配置npm\n* 下载项目后，在目录里面安装相关依赖，“npm install”\n* 启动项目，“npm run start”，在浏览器上查看效果\n\n#### 使用说明\n* 可参考“github.sh”来快速部署到github.io上\n* 把md文档放到\"source/_posts\"目录下，即可生成相关的静态html文件\n* [项目效果展示地址](https://doobo.github.io/),https://doobo.github.io","slug":"README","published":1,"date":"2025-02-16T12:47:07.358Z","updated":"2024-12-06T03:08:18.000Z","_id":"cm77mfkgh000jno5ffgxg2tb8","title":"","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"基于Hexo的静态网站模板\"><a href=\"#基于Hexo的静态网站模板\" class=\"headerlink\" title=\"基于Hexo的静态网站模板\"></a>基于Hexo的静态网站模板</h1><h4 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h4><p>基于Hexo的一套静态网页模版，可快速基于md文档生成静态网站，方便部署在github.io上</p>\n<h4 id=\"软件架构\"><a href=\"#软件架构\" class=\"headerlink\" title=\"软件架构\"></a>软件架构</h4><p>基于hexo，在nodeJs环境下运行，生成静态目录</p>\n<h4 id=\"安装教程\"><a href=\"#安装教程\" class=\"headerlink\" title=\"安装教程\"></a>安装教程</h4><ul>\n<li>安装NodeJs环境，并配置npm</li>\n<li>下载项目后，在目录里面安装相关依赖，“npm install”</li>\n<li>启动项目，“npm run start”，在浏览器上查看效果</li>\n</ul>\n<h4 id=\"使用说明\"><a href=\"#使用说明\" class=\"headerlink\" title=\"使用说明\"></a>使用说明</h4><ul>\n<li>可参考“github.sh”来快速部署到github.io上</li>\n<li>把md文档放到”source&#x2F;_posts”目录下，即可生成相关的静态html文件</li>\n<li><a href=\"https://doobo.github.io/\">项目效果展示地址</a>,<a href=\"https://doobo.github.io/\">https://doobo.github.io</a></li>\n</ul>\n","excerpt":"","more":"<h1 id=\"基于Hexo的静态网站模板\"><a href=\"#基于Hexo的静态网站模板\" class=\"headerlink\" title=\"基于Hexo的静态网站模板\"></a>基于Hexo的静态网站模板</h1><h4 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h4><p>基于Hexo的一套静态网页模版，可快速基于md文档生成静态网站，方便部署在github.io上</p>\n<h4 id=\"软件架构\"><a href=\"#软件架构\" class=\"headerlink\" title=\"软件架构\"></a>软件架构</h4><p>基于hexo，在nodeJs环境下运行，生成静态目录</p>\n<h4 id=\"安装教程\"><a href=\"#安装教程\" class=\"headerlink\" title=\"安装教程\"></a>安装教程</h4><ul>\n<li>安装NodeJs环境，并配置npm</li>\n<li>下载项目后，在目录里面安装相关依赖，“npm install”</li>\n<li>启动项目，“npm run start”，在浏览器上查看效果</li>\n</ul>\n<h4 id=\"使用说明\"><a href=\"#使用说明\" class=\"headerlink\" title=\"使用说明\"></a>使用说明</h4><ul>\n<li>可参考“github.sh”来快速部署到github.io上</li>\n<li>把md文档放到”source&#x2F;_posts”目录下，即可生成相关的静态html文件</li>\n<li><a href=\"https://doobo.github.io/\">项目效果展示地址</a>,<a href=\"https://doobo.github.io/\">https://doobo.github.io</a></li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm77mfkga0004no5f2116alut","category_id":"cm77mfkgc0006no5f2q9g6w03","_id":"cm77mfkge000bno5fc0iq2umn"},{"post_id":"cm77mfkgb0005no5f0lc777bs","category_id":"cm77mfkgc0006no5f2q9g6w03","_id":"cm77mfkge000dno5fhpil8bzb"},{"post_id":"cm77mfkgg000eno5f1pftckfx","category_id":"cm77mfkgc0006no5f2q9g6w03","_id":"cm77mfkgi000kno5f6u8ae4v6"},{"post_id":"cm77mfkgg000fno5f9iawfbhc","category_id":"cm77mfkgh000ino5fgv3seroe","_id":"cm77mfkgi000nno5f13gv0wkq"}],"PostTag":[{"post_id":"cm77mfkga0004no5f2116alut","tag_id":"cm77mfkgc0007no5f696989px","_id":"cm77mfkge000ano5fe258d0ud"},{"post_id":"cm77mfkgb0005no5f0lc777bs","tag_id":"cm77mfkgc0007no5f696989px","_id":"cm77mfkge000cno5f2d7wdhgd"},{"post_id":"cm77mfkgg000eno5f1pftckfx","tag_id":"cm77mfkgh000gno5fezar0ipt","_id":"cm77mfkgi000mno5faa5g0a4v"},{"post_id":"cm77mfkgg000fno5f9iawfbhc","tag_id":"cm77mfkgi000lno5f5alkh45w","_id":"cm77mfkgi000ono5f0x6o2ins"}],"Tag":[{"name":"GIT","_id":"cm77mfkgc0007no5f696989px"},{"name":"angular","_id":"cm77mfkgh000gno5fezar0ipt"},{"name":"stock","_id":"cm77mfkgi000lno5f5alkh45w"}]}}